[project]
name = "flowproc"
version = "1.0.41"
description = "A tool for processing flow cytometry CSV data"
requires-python = ">=3.13"
dependencies = [
    "numpy>=1.26.4",
    "pandas>=2.3.1",
    "openpyxl>=3.1.5",
    "PySide6>=6.7.0",  # GUI framework
    "plotly>=5.18.0",  # Added for visualization support
    "kaleido>=1.0.0",  # Added for static image export in plotly (PNG, PDF, SVG)
    "scikit-learn>=1.7.0",  # Added for data transformations
    "PyYAML>=6.0.0",  # Added for configuration management
    "pydantic>=2.0.0",  # Added for data validation and settings
]
license = "MIT"

[project.scripts]
flowproc = "flowproc.presentation.gui.main:main"  # Entry point for PySide6-based GUI

[tool.briefcase]
project_name = "FlowProcessor"
bundle = "com.example"
version = "1.0.41"
description = "A tool for processing flow cytometry data"
license = "MIT"
sources = [
    "flowproc",
]

[tool.briefcase.app.flowproc]
formal_name = "FlowProcessor"
description = "A GUI application for processing flow cytometry data"
requires = [
    "numpy>=1.26.4",
    "pandas>=2.3.1",
    "openpyxl>=3.1.5",
    "PySide6>=6.7.0",
    "plotly>=5.18.0",  # Added for visualization
    "kaleido>=1.0.0",  # Added for static image export in plotly (PNG, PDF, SVG)
    "scikit-learn>=1.7.0",  # Added for data transformations
    "PyYAML>=6.0.0",  # Added for configuration management
    "pydantic>=2.0.0",  # Added for data validation and settings
]
test_requires = [
    "pytest>=8.0",
    "pytest-qt>=4.3.0",  # Added for GUI testing
]

[tool.briefcase.app.flowproc.macOS]
icon = "flowproc/resources/icon"
entitlements = "flowproc/resources/entitlements.plist"  # Reference to external entitlements file

[tool.briefcase.app.flowproc.windows]
requires = []  # No platform-specific dependencies; inherit from project

[tool.briefcase.app.flowproc.linux]
requires = []  # No platform-specific dependencies; inherit from project

[tool.setuptools]
packages = [
    "flowproc",
]

[build-system]
requires = [
    "setuptools>=61.0",
    "wheel",
]
build-backend = "setuptools.build_meta"

[tool.pytest.ini_options]
markers = [
    "integration: mark tests as integration tests (deselect with '-m \"not integration\"')",
]