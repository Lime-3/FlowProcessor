{
  "metadata": {
    "generated_at": "2025-08-01T10:29:18.805758",
    "project_root": "/Users/franklin.lime/Documents/GitHub/FlowProcessor/flowproc-project",
    "analysis_type": "comprehensive_dependency_analysis"
  },
  "project_info": {
    "total_modules": 112,
    "total_functions": 135,
    "total_classes": 156,
    "architecture_layers": {
      "presentation": [
        "flowproc.presentation.__init__",
        "flowproc.presentation.cli.__init__",
        "flowproc.presentation.cli.cli",
        "flowproc.presentation.gui.__init__",
        "flowproc.presentation.gui.main",
        "flowproc.presentation.gui.config_handler",
        "flowproc.presentation.gui.workers.processing_worker",
        "flowproc.presentation.gui.workers.__init__",
        "flowproc.presentation.gui.workers.validation_worker",
        "flowproc.presentation.gui.controllers.processing_controller",
        "flowproc.presentation.gui.controllers.__init__",
        "flowproc.presentation.gui.controllers.main_controller",
        "flowproc.presentation.gui.views.main_window",
        "flowproc.presentation.gui.views.__init__",
        "flowproc.presentation.gui.views.mixins.validation_mixin",
        "flowproc.presentation.gui.views.mixins.styling_mixin",
        "flowproc.presentation.gui.views.mixins.__init__",
        "flowproc.presentation.gui.views.components.state_manager",
        "flowproc.presentation.gui.views.components.event_handler",
        "flowproc.presentation.gui.views.components.ui_builder",
        "flowproc.presentation.gui.views.components.__init__",
        "flowproc.presentation.gui.views.components.visualization_coordinator",
        "flowproc.presentation.gui.views.components.processing_coordinator",
        "flowproc.presentation.gui.views.components.file_manager",
        "flowproc.presentation.gui.views.components.gui_validator",
        "flowproc.presentation.gui.views.dialogs.__init__",
        "flowproc.presentation.gui.views.dialogs.group_labels_dialog",
        "flowproc.presentation.gui.views.dialogs.visualization_display_dialog",
        "flowproc.presentation.gui.views.dialogs.preview_dialog",
        "flowproc.presentation.gui.views.dialogs.visualization_options_dialog",
        "flowproc.presentation.gui.views.widgets.__init__",
        "flowproc.presentation.gui.views.widgets.progress_widget",
        "flowproc.presentation.gui.views.widgets.drop_line_edit"
      ],
      "application": [
        "flowproc.application.__init__",
        "flowproc.application.container",
        "flowproc.application.exceptions",
        "flowproc.application.workflows.__init__",
        "flowproc.application.workflows.visualization",
        "flowproc.application.workflows.data_processing",
        "flowproc.application.handlers.event_handler",
        "flowproc.application.handlers.__init__",
        "flowproc.application.handlers.error_handler"
      ],
      "domain": [
        "flowproc.domain.__init__",
        "flowproc.domain.visualization.data_aggregation",
        "flowproc.domain.visualization.plot_creators",
        "flowproc.domain.visualization.simple_visualizer",
        "flowproc.domain.visualization.column_utils",
        "flowproc.domain.visualization.time_plots",
        "flowproc.domain.visualization.__init__",
        "flowproc.domain.visualization.plotly_renderer",
        "flowproc.domain.visualization.legend_config",
        "flowproc.domain.visualization.faceted_plots",
        "flowproc.domain.visualization.simple_visualizer_refactored",
        "flowproc.domain.processing.service",
        "flowproc.domain.processing.data_processor",
        "flowproc.domain.processing.transformers",
        "flowproc.domain.processing.vectorized_aggregator",
        "flowproc.domain.processing.__init__",
        "flowproc.domain.processing.core",
        "flowproc.domain.processing.aggregators",
        "flowproc.domain.processing.transform",
        "flowproc.domain.parsing.tissue_parser",
        "flowproc.domain.parsing.service",
        "flowproc.domain.parsing.strategies",
        "flowproc.domain.parsing.validators",
        "flowproc.domain.parsing.column_detector",
        "flowproc.domain.parsing.csv_reader",
        "flowproc.domain.parsing.__init__",
        "flowproc.domain.parsing.group_animal_parser",
        "flowproc.domain.parsing.well_parser",
        "flowproc.domain.parsing.time_parser",
        "flowproc.domain.parsing.validation_utils",
        "flowproc.domain.parsing.data_transformer",
        "flowproc.domain.parsing.time_service",
        "flowproc.domain.parsing.sample_id_parser",
        "flowproc.domain.parsing.parsing_utils",
        "flowproc.domain.parsing.init",
        "flowproc.domain.parsing.validation_service.validators",
        "flowproc.domain.parsing.validation_service.__init__",
        "flowproc.domain.export.service",
        "flowproc.domain.export.formatters",
        "flowproc.domain.export.data_aggregator",
        "flowproc.domain.export.sheet_builder",
        "flowproc.domain.export.__init__",
        "flowproc.domain.export.excel_writer",
        "flowproc.domain.export.excel_formatter",
        "flowproc.domain.export.init",
        "flowproc.domain.export.time_formatter",
        "flowproc.domain.export.replicate_mapper",
        "flowproc.domain.export.style_manager",
        "flowproc.domain.validation.__init__",
        "flowproc.domain.validation.input_validator"
      ],
      "infrastructure": [
        "flowproc.infrastructure.__init__",
        "flowproc.infrastructure.config.__init__",
        "flowproc.infrastructure.config.settings",
        "flowproc.infrastructure.persistence.data_io",
        "flowproc.infrastructure.persistence.__init__",
        "flowproc.infrastructure.monitoring.metrics",
        "flowproc.infrastructure.monitoring.health",
        "flowproc.infrastructure.monitoring.__init__"
      ],
      "core": [
        "flowproc.core.models",
        "flowproc.core.protocols",
        "flowproc.core.constants",
        "flowproc.core.__init__",
        "flowproc.core.exceptions",
        "flowproc.core.validation"
      ],
      "shared": [
        "flowproc.setup_dependencies",
        "flowproc.config",
        "flowproc.logging_config",
        "flowproc.resource_utils",
        "flowproc.__init__",
        "flowproc.__main__"
      ]
    }
  },
  "module_dependencies": {
    "flowproc.setup_dependencies": [],
    "flowproc.config": [],
    "flowproc.logging_config": [],
    "flowproc.resource_utils": [],
    "flowproc.__init__": [],
    "flowproc.__main__": [],
    "flowproc.core.models": [],
    "flowproc.core.protocols": [],
    "flowproc.core.constants": [],
    "flowproc.core.__init__": [],
    "flowproc.core.exceptions": [],
    "flowproc.core.validation": [],
    "flowproc.application.__init__": [],
    "flowproc.application.container": [
      "flowproc.core.protocols",
      "flowproc.domain.processing.service",
      "flowproc.domain.visualization.plotly_renderer",
      "flowproc.infrastructure.config.settings",
      "flowproc.domain.export.service",
      "flowproc.domain.parsing.service"
    ],
    "flowproc.application.exceptions": [],
    "flowproc.application.workflows.__init__": [],
    "flowproc.application.workflows.visualization": [],
    "flowproc.application.workflows.data_processing": [],
    "flowproc.application.handlers.event_handler": [],
    "flowproc.application.handlers.__init__": [],
    "flowproc.application.handlers.error_handler": [],
    "flowproc.infrastructure.__init__": [],
    "flowproc.infrastructure.config.__init__": [],
    "flowproc.infrastructure.config.settings": [],
    "flowproc.infrastructure.persistence.data_io": [],
    "flowproc.infrastructure.persistence.__init__": [],
    "flowproc.infrastructure.monitoring.metrics": [],
    "flowproc.infrastructure.monitoring.health": [],
    "flowproc.infrastructure.monitoring.__init__": [],
    "flowproc.domain.__init__": [],
    "flowproc.domain.visualization.data_aggregation": [],
    "flowproc.domain.visualization.plot_creators": [],
    "flowproc.domain.visualization.simple_visualizer": [
      "flowproc.domain.parsing"
    ],
    "flowproc.domain.visualization.column_utils": [],
    "flowproc.domain.visualization.time_plots": [
      "flowproc.domain.parsing"
    ],
    "flowproc.domain.visualization.__init__": [],
    "flowproc.domain.visualization.plotly_renderer": [],
    "flowproc.domain.visualization.legend_config": [],
    "flowproc.domain.visualization.faceted_plots": [],
    "flowproc.domain.visualization.simple_visualizer_refactored": [
      "flowproc.domain.parsing"
    ],
    "flowproc.domain.processing.service": [],
    "flowproc.domain.processing.data_processor": [],
    "flowproc.domain.processing.transformers": [],
    "flowproc.domain.processing.vectorized_aggregator": [],
    "flowproc.domain.processing.__init__": [],
    "flowproc.domain.processing.core": [],
    "flowproc.domain.processing.aggregators": [],
    "flowproc.domain.processing.transform": [
      "flowproc.domain.parsing"
    ],
    "flowproc.domain.parsing.tissue_parser": [],
    "flowproc.domain.parsing.service": [],
    "flowproc.domain.parsing.strategies": [],
    "flowproc.domain.parsing.validators": [],
    "flowproc.domain.parsing.column_detector": [],
    "flowproc.domain.parsing.csv_reader": [],
    "flowproc.domain.parsing.__init__": [],
    "flowproc.domain.parsing.group_animal_parser": [],
    "flowproc.domain.parsing.well_parser": [],
    "flowproc.domain.parsing.time_parser": [],
    "flowproc.domain.parsing.validation_utils": [],
    "flowproc.domain.parsing.data_transformer": [],
    "flowproc.domain.parsing.time_service": [],
    "flowproc.domain.parsing.sample_id_parser": [],
    "flowproc.domain.parsing.parsing_utils": [],
    "flowproc.domain.parsing.init": [],
    "flowproc.domain.parsing.validation_service.validators": [],
    "flowproc.domain.parsing.validation_service.__init__": [],
    "flowproc.domain.export.service": [],
    "flowproc.domain.export.formatters": [],
    "flowproc.domain.export.data_aggregator": [],
    "flowproc.domain.export.sheet_builder": [],
    "flowproc.domain.export.__init__": [],
    "flowproc.domain.export.excel_writer": [],
    "flowproc.domain.export.excel_formatter": [],
    "flowproc.domain.export.init": [],
    "flowproc.domain.export.time_formatter": [],
    "flowproc.domain.export.replicate_mapper": [],
    "flowproc.domain.export.style_manager": [],
    "flowproc.domain.validation.__init__": [],
    "flowproc.domain.validation.input_validator": [],
    "flowproc.presentation.__init__": [],
    "flowproc.presentation.cli.__init__": [],
    "flowproc.presentation.cli.cli": [],
    "flowproc.presentation.gui.__init__": [],
    "flowproc.presentation.gui.main": [
      "flowproc.logging_config",
      "flowproc.presentation.gui.views.main_window",
      "flowproc.resource_utils"
    ],
    "flowproc.presentation.gui.config_handler": [],
    "flowproc.presentation.gui.workers.processing_worker": [],
    "flowproc.presentation.gui.workers.__init__": [],
    "flowproc.presentation.gui.workers.validation_worker": [
      "flowproc.domain.validation"
    ],
    "flowproc.presentation.gui.controllers.processing_controller": [],
    "flowproc.presentation.gui.controllers.__init__": [],
    "flowproc.presentation.gui.controllers.main_controller": [
      "flowproc.domain.validation"
    ],
    "flowproc.presentation.gui.views.main_window": [],
    "flowproc.presentation.gui.views.__init__": [],
    "flowproc.presentation.gui.views.mixins.validation_mixin": [
      "flowproc.domain.validation"
    ],
    "flowproc.presentation.gui.views.mixins.styling_mixin": [
      "flowproc.resource_utils"
    ],
    "flowproc.presentation.gui.views.mixins.__init__": [],
    "flowproc.presentation.gui.views.components.state_manager": [],
    "flowproc.presentation.gui.views.components.event_handler": [
      "flowproc.core.constants",
      "flowproc.domain.parsing.service",
      "flowproc.config"
    ],
    "flowproc.presentation.gui.views.components.ui_builder": [],
    "flowproc.presentation.gui.views.components.__init__": [],
    "flowproc.presentation.gui.views.components.visualization_coordinator": [],
    "flowproc.presentation.gui.views.components.processing_coordinator": [
      "flowproc.domain.visualization.simple_visualizer"
    ],
    "flowproc.presentation.gui.views.components.file_manager": [],
    "flowproc.presentation.gui.views.components.gui_validator": [
      "flowproc.domain.validation"
    ],
    "flowproc.presentation.gui.views.dialogs.__init__": [],
    "flowproc.presentation.gui.views.dialogs.group_labels_dialog": [],
    "flowproc.presentation.gui.views.dialogs.visualization_display_dialog": [
      "flowproc.core.constants",
      "flowproc.domain.visualization.simple_visualizer",
      "flowproc.presentation.gui.views.dialogs.visualization_options_dialog",
      "flowproc.domain.parsing"
    ],
    "flowproc.presentation.gui.views.dialogs.preview_dialog": [],
    "flowproc.presentation.gui.views.dialogs.visualization_options_dialog": [
      "flowproc.core.constants",
      "flowproc.domain.parsing"
    ],
    "flowproc.presentation.gui.views.widgets.__init__": [],
    "flowproc.presentation.gui.views.widgets.progress_widget": [],
    "flowproc.presentation.gui.views.widgets.drop_line_edit": []
  },
  "function_calls": {
    "flowproc.setup_dependencies.main": [
      "subprocess.run",
      "sys.exit",
      "print",
      "pip_cmd.extend",
      "main",
      "install_flowproc_dependencies",
      "pip_cmd.append",
      "dep.split",
      "RuntimeError",
      "os.environ.get",
      "importlib.util.find_spec"
    ],
    "flowproc.config.__init__": [
      "part.split",
      "result.extend",
      "set",
      "input_str.replace",
      "result.append",
      "range",
      "ValueError",
      "sorted",
      "int",
      "map",
      "list",
      "input_str.replace.split"
    ],
    "flowproc.logging_config.setup_logging": [
      "root.setLevel",
      "any",
      "root.handlers.clear",
      "root.addHandler",
      "console.setFormatter",
      "logging.getLogger",
      "logging.Formatter",
      "logging.StreamHandler",
      "console.setLevel"
    ],
    "flowproc.logging_config.on_shutdown": [
      "f.flush",
      "OSError",
      "custom_flush",
      "root.debug",
      "handler.flush",
      "isinstance",
      "file_handler.setLevel",
      "ensure_writable_dir",
      "os.getenv",
      "os.fsync",
      "log_file.exists",
      "datetime.now",
      "f.fileno",
      "logging.basicConfig",
      "logging.error",
      "open",
      "logging.FileHandler",
      "shutil.copy2",
      "handler.close",
      "datetime.now.strftime",
      "Path.resolve",
      "file_handler.setFormatter",
      "atexit.register",
      "root.removeHandler",
      "print",
      "root.addHandler",
      "log_file.stat",
      "get_data_path",
      "Path"
    ],
    "flowproc.resource_utils._initialize_directories": [
      "Path.home",
      "resource_path.resolve",
      "set",
      "get_package_root",
      "test_file.touch",
      "location.resolve",
      "location.exists",
      "len",
      "test_file.unlink",
      "get_config_dir",
      "is_pyinstaller",
      "str",
      "Path.cwd",
      "_initialize_directories",
      "is_briefcase",
      "logger.info",
      "fallback.resolve",
      "ensure_writable_dir",
      "os.environ.get",
      "unique_locations.append",
      "get_app_data_dir",
      "full_path.resolve",
      "path.mkdir",
      "fallback_locations.append",
      "seen.add",
      "_get_fallback_locations",
      "hasattr",
      "logger.warning",
      "logger.error",
      "get_cache_dir",
      "Path.resolve",
      "site.getsitepackages",
      "Path.parent.resolve",
      "str.endswith",
      "resource_path.exists",
      "logging.getLogger",
      "Path",
      "logger.debug"
    ],
    "flowproc.__init__.main": [
      "ImportError",
      "main",
      "gui_main"
    ],
    "flowproc.__main__.main": [
      "create_gui",
      "main",
      "Path",
      "str",
      "sys.path.insert"
    ],
    "flowproc.core.models.validate_output_dir": [
      "ConfigDict",
      "Field",
      "v.mkdir",
      "ValueError",
      "path.exists",
      "field_validator"
    ],
    "flowproc.core.constants.is_pure_metric_column": [
      "col_name.lower",
      "auto",
      "metric_keyword.lower",
      "col_lower.startswith"
    ],
    "flowproc.core.validation.validation_error_handler": [
      "logging.getLogger"
    ],
    "flowproc.core.validation.wrapper": [
      "validator.validate_visualization_config",
      "RangeValidator",
      "self.item_validator.validate",
      "ConfigurationValidator",
      "path.exists",
      "ValueError",
      "len",
      "TypeValidator",
      "str",
      "func",
      "ValidationResult",
      "validator.validate_processing_config",
      "validator.validate",
      "isinstance",
      "EnumValidator",
      "self.validate_visualization_config",
      "self._setup_default_validators",
      "self._validate_domain_config",
      "path.is_dir",
      "super",
      "path.suffix.lower",
      "result.issues.append",
      "validator.validate_paths_config",
      "ValidationIssue",
      "self.validate_processing_config",
      "ListValidator",
      "self.severity.value.upper",
      "hasattr",
      "self.issues.append",
      "logger.warning",
      "logger.error",
      "self.validate_export_config",
      "type",
      "result.issues.extend",
      "validator.validate_export_config",
      "config.copy",
      "validators.items",
      "result.add_issue",
      "get_configuration_validator",
      "validator.validate_workflow_config",
      "field",
      "enumerate",
      "PathValidator",
      "Path",
      "path.is_file",
      "NotImplementedError",
      "super.__init__",
      "wraps"
    ],
    "flowproc.application.container.Container.__init__": [
      "TypeVar"
    ],
    "flowproc.application.container.get_singleton": [
      "lru_cache",
      "self._register_defaults",
      "self.register",
      "implementation",
      "self.get",
      "ValueError",
      "Container"
    ],
    "flowproc.application.exceptions.__init__": [
      "super",
      "self.details.items",
      "str",
      "type",
      "super.__init__"
    ],
    "flowproc.application.workflows.visualization.VisualizationWorkflow.__init__": [
      "logging.getLogger"
    ],
    "flowproc.application.workflows.visualization.get_visualization_capabilities": [
      "time_config.get",
      "metrics_collector.end_operation",
      "len",
      "str",
      "self.unified_service.create_plot",
      "self.unified_service.create_comparison_plot",
      "isinstance",
      "self.unified_service.save_plot",
      "plot_config.get",
      "config.get",
      "logger.info",
      "metrics_collector.start_operation",
      "validation.append",
      "self.unified_service.get_available_plot_types",
      "comp_config.get",
      "self.unified_service.get_available_themes",
      "logger.error",
      "self.unified_service.validate_plot_config",
      "self.unified_service.create_dashboard",
      "self.unified_service.create_time_series_plot",
      "type",
      "dashboard_config.get",
      "results.append",
      "get_unified_visualization_service",
      "enumerate",
      "Path",
      "logger.debug"
    ],
    "flowproc.application.workflows.data_processing.DataProcessingWorkflow.__init__": [
      "logging.getLogger"
    ],
    "flowproc.application.workflows.data_processing._get_processing_stats": [
      "plots.append",
      "self._parse_stage",
      "pd.api.types.is_numeric_dtype",
      "self._visualization_stage",
      "self.visualization_service.get_available_plot_types",
      "VisualizationService",
      "self.unified_processing_service.process_data",
      "self.visualization_service.create_plot",
      "self.export_service.export_data",
      "stats.append",
      "metrics_collector.end_operation",
      "config.get.get",
      "len",
      "pd.DataFrame",
      "str",
      "self.parse_service.register_strategy",
      "self.visualization_service.save_plot",
      "self._export_stage",
      "self._register_default_strategies",
      "UnifiedProcessingService",
      "DefaultParsingStrategy",
      "plot_config.get",
      "df.memory_usage",
      "config.get",
      "logger.info",
      "metrics_collector.start_operation",
      "self.visualization_service.get_available_themes",
      "MinimalParsingStrategy",
      "export_paths.append",
      "self.process_file",
      "validate_config",
      "self.parse_service.get_available_strategies",
      "logger.error",
      "ProcessingConfig",
      "list",
      "pd.api.types.is_datetime64_any_dtype",
      "ParseService",
      "result.add_issue",
      "result.to_dict",
      "ExportService",
      "df.memory_usage.sum",
      "enumerate",
      "results.append",
      "self._processing_stage",
      "self.parse_service.parse_file",
      "Path",
      "self._get_processing_stats",
      "self.export_service.get_export_formats"
    ],
    "flowproc.application.handlers.event_handler.emit_warning_event": [
      "logging.getLogger"
    ],
    "flowproc.application.handlers.event_handler._notify_event": [
      "self.setup_notifications",
      "event.timestamp.isoformat",
      "self.event_listeners.remove",
      "threading.Lock",
      "self._event_to_dict",
      "len",
      "str",
      "EventLogger",
      "self.setup_logging",
      "self.event_history.clear",
      "logger.info",
      "self.event_listeners.get",
      "Event",
      "datetime.now",
      "self.event_history.append",
      "event.event_type.value.endswith",
      "logger.error",
      "event_types.get",
      "logger.warning",
      "events.timestamp.isoformat",
      "type",
      "EventNotifier",
      "EventHandler",
      "event_handler.emit_event",
      "self.event_listeners.append",
      "field",
      "self.notification_callbacks.append",
      "self._notify_listeners",
      "callback",
      "listener",
      "self.event_handler.register_listener",
      "logger.debug",
      "self.event_history.copy"
    ],
    "flowproc.application.handlers.error_handler._permission_error_recovery": [
      "logging.getLogger"
    ],
    "flowproc.application.handlers.error_handler.attempt_recovery": [
      "ErrorHandler",
      "ErrorRecovery",
      "wraps"
    ],
    "flowproc.application.handlers.error_handler.wrapper": [
      "self.error_callbacks",
      "error_handler.handle_error",
      "traceback.format_exc",
      "self._call_error_callbacks",
      "metrics_collector.end_operation",
      "len",
      "_error_handler.register_error_callback",
      "str",
      "func",
      "self.error_history.clear",
      "logger.info",
      "datetime.now.isoformat",
      "error_types.get",
      "error_context.update",
      "context.copy",
      "datetime.now",
      "self.error_history.copy",
      "getattr",
      "logger.error",
      "logger.warning",
      "context.get",
      "type",
      "self.error_history.append",
      "error_recovery.register_recovery_strategy",
      "self.recovery_strategies",
      "logger.debug",
      "wraps"
    ],
    "flowproc.infrastructure.config.settings.save": [
      "self._settings.save",
      "self.model_dump",
      "ValueError",
      "key.split",
      "Settings",
      "setattr",
      "config_file.exists",
      "yaml.dump",
      "json.load",
      "str",
      "self._settings.model_dump",
      "Settings.from_file",
      "yaml.safe_load",
      "ConfigDict",
      "json.dump",
      "getattr",
      "open",
      "hasattr",
      "file_path.exists",
      "cls",
      "Field",
      "self._config_file.exists",
      "ConfigurationError",
      "field_validator"
    ],
    "flowproc.infrastructure.persistence.data_io.validate_parsed_data": [
      "pd.isna",
      "sample_id.split",
      "sample_id.strip.split",
      "validate_persistence_input",
      "parse_time",
      "group_match.group",
      "re.compile",
      "sample_id.strip",
      "int",
      "logger.warning",
      "logging.getLogger",
      "len",
      "parts.isdigit",
      "GROUP_RE.search"
    ],
    "flowproc.infrastructure.monitoring.metrics.SystemMonitor.__init__": [
      "logging.getLogger"
    ],
    "flowproc.infrastructure.monitoring.metrics.get_metrics_summary": [
      "MetricsCollector",
      "threading.Lock",
      "self.metrics_history.copy",
      "int",
      "sum",
      "len",
      "psutil.cpu_percent",
      "min",
      "self.metrics.copy",
      "time.sleep",
      "logger.info",
      "self.metrics_history.append",
      "threading.Thread",
      "datetime.now.isoformat",
      "psutil.virtual_memory",
      "datetime.now",
      "psutil.disk_usage",
      "logger.error",
      "SystemMonitor",
      "self._monitor_thread.start",
      "logger.warning",
      "self._monitor_thread.join",
      "self.metrics.append",
      "max",
      "time.time",
      "PerformanceMetrics",
      "field",
      "self._collect_system_metrics",
      "self.metrics.clear",
      "logger.debug"
    ],
    "flowproc.infrastructure.monitoring.health.HealthMonitor.__init__": [
      "logging.getLogger"
    ],
    "flowproc.infrastructure.monitoring.health.get_current_health": [
      "self.checks.extend",
      "threading.Lock",
      "self._check_python_environment",
      "self._check_disk_usage",
      "len",
      "self._check_disk_space",
      "psutil.cpu_percent",
      "str",
      "HealthMonitor",
      "self._check_to_dict",
      "missing_packages.append",
      "self._check_required_packages",
      "self.health_history.append",
      "time.sleep",
      "HealthChecker",
      "self.health_history.copy",
      "self._determine_overall_status",
      "logger.info",
      "checks.append",
      "self.health_checker.check_system_health",
      "threading.Thread",
      "self._check_cpu_usage",
      "datetime.now.isoformat",
      "self._create_summary",
      "check.timestamp.isoformat",
      "psutil.virtual_memory",
      "self._check_memory_usage",
      "self.checks.clear",
      "datetime.now",
      "psutil.disk_usage",
      "getattr",
      "hasattr",
      "logger.warning",
      "self._monitor_thread.start",
      "logger.error",
      "self._monitor_thread.join",
      "any",
      "HealthCheck",
      "__import__",
      "logger.critical"
    ],
    "flowproc.domain.visualization.data_aggregation.prepare_data_for_plotting": [
      "aggregate_by_group_with_sem",
      "ValueError",
      "analyze_data_size",
      "pd.concat",
      "len",
      "plot_data.append",
      "extract_cell_type_name",
      "np.sqrt",
      "df.select_dtypes.columns.tolist",
      "logger.info",
      "df.sample",
      "plot_df.dropna",
      "df.groupby.agg",
      "df.select_dtypes",
      "df.groupby",
      "list",
      "df.groupby.agg.reset_index",
      "logging.getLogger",
      "df.copy"
    ],
    "flowproc.domain.visualization.plot_creators.create_basic_plot": [
      "kwargs.get",
      "aggregate_multiple_metrics_by_group",
      "df.melt",
      "px.histogram",
      "px.scatter",
      "aggregate_by_group_with_sem",
      "apply_standard_legend_config",
      "px.line",
      "ValueError",
      "px.bar",
      "melted_df.apply",
      "px.box",
      "logging.getLogger",
      "sample_data_if_large",
      "apply_default_layout",
      "fig.update_layout",
      "list"
    ],
    "flowproc.domain.visualization.simple_visualizer._create_single_column_faceted_plot": [
      "kwargs.get",
      "subplot_cell_types.append",
      "px.histogram",
      "min",
      "df.dropna",
      "df.unique.tolist",
      "go.Scatter",
      "px.line",
      "_analyze_data_size",
      "plot_df.dropna",
      "_create_cell_type_faceted_plot",
      "geo_mean_cols.append",
      "PlotlyRenderer",
      "df.groupby",
      "fig.update_xaxes",
      "recommendations.append",
      "zip",
      "plot_df.unique",
      "range",
      "legend_items.append",
      "logger.debug",
      "subplot_traces.append",
      "facet_data.copy",
      "_extract_cell_type_name",
      "subplot_groups.append",
      "pd.concat",
      "len",
      "base_columns.append",
      "melted_df.apply",
      "logger.info",
      "fig.update_layout",
      "px.bar",
      "parts.split",
      "value_col.lower",
      "logger.warning",
      "_create_cell_type_comparison_plot",
      "mean_cols.append",
      "df.groupby.agg.reset_index",
      "plot",
      "Path",
      "facet_data.dropna",
      "load_and_parse_df",
      "make_subplots",
      "plot_data.append",
      "str",
      "minutes.is_integer",
      "df.melt",
      "renderer.export_to_html_optimized",
      "_create_single_column_faceted_plot",
      "facet_data.dropna.unique",
      "df.sample",
      "df.groupby.agg",
      "px.box",
      "hasattr",
      "freq_cols.append",
      "list",
      "time_val.is_integer",
      "max",
      "any",
      "annotations.append",
      "_create_enhanced_title",
      "df.isin",
      "logging.getLogger",
      "column_name.split",
      "cell_part.split",
      "ValueError",
      "int",
      "_create_time_course_single_plot",
      "time_strs.append",
      "df.dropna.unique",
      "np.sqrt",
      "isinstance",
      "fig.update_yaxes",
      "_detect_flow_columns",
      "subplot_titles.append",
      "fig.add_trace",
      "dict",
      "_create_single_metric_plot",
      "_create_group_faceted_plot",
      "y.lower",
      "px.scatter",
      "col.lower",
      "_apply_standard_legend_config",
      "df.unique",
      "days.is_integer",
      "sorted",
      "enumerate",
      "df.copy"
    ],
    "flowproc.domain.visualization.column_utils.get_base_columns": [
      "int",
      "len",
      "str",
      "min",
      "df.dropna",
      "time_strs.append",
      "extract_cell_type_name",
      "df.dropna.unique",
      "minutes.is_integer",
      "isinstance",
      "base_columns.append",
      "geo_mean_cols.append",
      "parts.split",
      "freq_cols.append",
      "list",
      "time_val.is_integer",
      "col.lower",
      "recommendations.append",
      "any",
      "mean_cols.append",
      "days.is_integer",
      "sorted",
      "logging.getLogger",
      "column_name.split",
      "cell_part.split"
    ],
    "flowproc.domain.visualization.time_plots.time_plot_faceted": [
      "load_and_parse_df",
      "ValueError",
      "analyze_data_size",
      "len",
      "create_single_column_faceted_plot",
      "isinstance",
      "renderer.export_to_html_optimized",
      "logger.info",
      "create_time_course_single_plot",
      "create_cell_type_faceted_plot",
      "PlotlyRenderer",
      "detect_flow_columns",
      "value_col.lower",
      "list",
      "col.lower",
      "sorted",
      "logging.getLogger",
      "create_group_faceted_plot",
      "Path",
      "logger.debug"
    ],
    "flowproc.domain.visualization.plotly_renderer.PlotlyRenderer.__init__": [
      "logging.getLogger"
    ],
    "flowproc.domain.visualization.plotly_renderer.get_figure_info": [
      "px.violin",
      "layout_adjustments.get",
      "f.write",
      "make_subplots",
      "px.imshow",
      "fig.update_traces",
      "len",
      "px.histogram",
      "df.unique.tolist",
      "px.line",
      "calculate_layout_for_long_labels",
      "fig.add_trace",
      "px.scatter_3d",
      "px.bar",
      "fig.update_layout",
      "dict",
      "html_content.find",
      "legend_config.get",
      "open",
      "px.box",
      "fig.layout.keys",
      "hasattr",
      "px.scatter",
      "df.pivot_table",
      "fig.update_xaxes",
      "list",
      "calculate_optimal_legend_position",
      "fig.to_html",
      "df.unique",
      "fig.write_image",
      "range",
      "fig.write_html",
      "enumerate",
      "temp_fig.write_image"
    ],
    "flowproc.domain.visualization.legend_config.apply_default_layout": [
      "kwargs.get",
      "zip",
      "max",
      "df.unique.tolist",
      "df.unique",
      "dict",
      "legend_items.append",
      "enumerate",
      "hasattr",
      "logging.getLogger",
      "len",
      "fig.update_layout"
    ],
    "flowproc.domain.visualization.faceted_plots.create_single_column_faceted_plot": [
      "kwargs.get",
      "subplot_traces.append",
      "subplot_cell_types.append",
      "make_subplots",
      "ValueError",
      "int",
      "subplot_groups.append",
      "create_enhanced_title",
      "len",
      "str",
      "get_base_columns",
      "time_strs.append",
      "extract_cell_type_name",
      "minutes.is_integer",
      "isinstance",
      "go.Scatter",
      "fig.update_yaxes",
      "subplot_titles.append",
      "logger.info",
      "facet_data.dropna.unique",
      "fig.add_trace",
      "fig.update_layout",
      "create_subplot_legend_annotation",
      "dict",
      "hasattr",
      "fig.update_xaxes",
      "time_val.is_integer",
      "max",
      "df.unique",
      "annotations.append",
      "plot_df.unique",
      "range",
      "days.is_integer",
      "sorted",
      "enumerate",
      "prepare_data_for_plotting",
      "logging.getLogger",
      "facet_data.dropna"
    ],
    "flowproc.domain.visualization.simple_visualizer_refactored.histogram": [
      "kwargs.get",
      "load_and_parse_df",
      "ValueError",
      "len",
      "isinstance",
      "renderer.export_to_html_optimized",
      "logger.info",
      "fig.update_layout",
      "create_basic_plot",
      "logger.debug",
      "PlotlyRenderer",
      "detect_flow_columns",
      "logger.warning",
      "y.lower",
      "list",
      "col.lower",
      "create_cell_type_comparison_plot",
      "apply_standard_legend_config",
      "plot",
      "range",
      "df.isin",
      "logging.getLogger",
      "Path",
      "create_single_metric_plot",
      "df.copy"
    ],
    "flowproc.domain.processing.service.validate_processing_config": [
      "pd.api.types.is_numeric_dtype",
      "result.to_dict",
      "ProcessingError",
      "UnifiedProcessingService",
      "validate_config",
      "df.memory_usage",
      "self.unified_service.process_data",
      "df.memory_usage.sum",
      "stats.append",
      "config.get",
      "len",
      "ProcessingConfig",
      "str",
      "pd.api.types.is_datetime64_any_dtype"
    ],
    "flowproc.domain.processing.data_processor.ChunkedDataProcessor.__init__": [
      "logging.getLogger"
    ],
    "flowproc.domain.processing.data_processor.optimize_dataframe": [
      "pd.concat",
      "len",
      "df.astype",
      "self.check_memory",
      "pd.to_numeric",
      "df.memory_usage",
      "logger.info",
      "MemoryError",
      "self.memory_monitor.monitor",
      "df.nunique",
      "self.process.memory_info",
      "gc.collect",
      "df.select_dtypes",
      "process_func",
      "MemoryMonitor",
      "df.unique",
      "results.append",
      "psutil.Process",
      "self.memory_monitor.check_memory",
      "df.memory_usage.sum",
      "logger.debug"
    ],
    "flowproc.domain.processing.transformers.DataTransformer.__init__": [
      "logging.getLogger"
    ],
    "flowproc.domain.processing.transformers.get_transformation_info": [
      "df.copy",
      "self.scalers.keys",
      "self._select_columns",
      "self._log_transform",
      "len",
      "abs",
      "df.max",
      "isinstance",
      "options.get",
      "df.median",
      "result_df.isin",
      "df.select_dtypes.columns.tolist",
      "df.min",
      "self._normalize_data",
      "criteria.items",
      "df.mean",
      "np.abs",
      "df.select_dtypes",
      "np.median",
      "result_df.str.contains",
      "logger.warning",
      "list",
      "np.log",
      "self._scale_data",
      "df.std",
      "self._filter_data"
    ],
    "flowproc.domain.processing.vectorized_aggregator.benchmark_aggregation": [
      "logging.getLogger"
    ],
    "flowproc.domain.processing.vectorized_aggregator.optimize_dataframe": [
      "df.copy",
      "self.df.memory_usage.sum",
      "cleaned.split",
      "self.df.dropna.unique",
      "result_dfs.append",
      "np.isnan",
      "aggregator.aggregate_all_metrics",
      "old_times.append",
      "agg_result.map",
      "group_cols.insert",
      "melted.dropna",
      "np.mean",
      "int",
      "vectorized_times.append",
      "metric_name.lower",
      "len",
      "sum",
      "cell_types.append",
      "AggregationResult",
      "df.astype",
      "pd.to_numeric",
      "isinstance",
      "self.df.nunique",
      "pd.melt",
      "self.df.copy",
      "self._prepare_data",
      "self._auto_detect_config",
      "col_name.split",
      "reversed",
      "logger.info",
      "df.memory_usage",
      "id_vars.append",
      "part.strip",
      "melted.groupby.agg",
      "agg_result.copy",
      "TypeError",
      "KEYWORDS.get",
      "self.aggregate_metric",
      "result.dataframes.extend",
      "np.std",
      "agg_result.unique",
      "df.nunique",
      "KEYWORDS.keys",
      "col_name.split.strip",
      "self.df.memory_usage",
      "gc.collect",
      "df.select_dtypes",
      "self.df.isna",
      "hasattr",
      "logger.warning",
      "self.df.notna",
      "melted.groupby.agg.reset_index",
      "VectorizedAggregator",
      "self.df.dropna.unique.astype",
      "type",
      "list",
      "col.lower",
      "self.df.dropna",
      "time.time",
      "any",
      "melted.apply",
      "old_function",
      "field",
      "melted.groupby",
      "range",
      "sorted",
      "df.memory_usage.sum",
      "logging.getLogger",
      "logging.getLogger.debug",
      "AggregationConfig",
      "self.df.apply",
      "result.metrics.append",
      "logger.debug",
      "self.df.isna.all"
    ],
    "flowproc.domain.processing.core.validate_config": [
      "viz_options.get",
      "WorkflowProcessingStrategy",
      "self.transformer.transform",
      "self._apply_visualization_filters",
      "len",
      "str",
      "self._apply_aggregations",
      "DataTransformer",
      "pd.to_numeric",
      "isinstance",
      "self.aggregator.aggregate",
      "GenericProcessingStrategy",
      "strategy.process",
      "validation.append",
      "VisualizationProcessingStrategy",
      "strategy.can_handle",
      "ProcessingError",
      "self._apply_workflow_processing",
      "self._get_strategy",
      "VectorizedAggregator",
      "filter_options.get",
      "self._apply_visualization_transformations",
      "self._apply_transformations",
      "df.copy"
    ],
    "flowproc.domain.processing.aggregators.DataAggregator.__init__": [
      "logging.getLogger"
    ],
    "flowproc.domain.processing.aggregators.aggregate": [
      "NotImplementedError",
      "field"
    ],
    "flowproc.domain.processing.transform.reshape_pair": [
      "logging.getLogger"
    ],
    "flowproc.domain.processing.transform.get_replicate": [
      "pd.isna",
      "df.notna.any",
      "tissue_part.isna",
      "ValueError",
      "val_blocks.append",
      "int",
      "tissue_df.dropna.unique",
      "group_counts.min",
      "len",
      "sub.unique",
      "pd.notna",
      "str",
      "group_df.dropna",
      "sub.apply",
      "row_vals.append",
      "df.dropna",
      "df.astype",
      "df.dropna.unique",
      "row_ids.append",
      "df.groupby.nunique",
      "logger.info",
      "df.dropna.copy",
      "animal_mapping.get",
      "df.apply",
      "group_df.dropna.unique",
      "tissue_df.dropna",
      "pd.notnull",
      "df.nunique",
      "group_df.unique",
      "logger.warning",
      "time_values.append",
      "group_numbers.append",
      "df.groupby",
      "tissue_row_counts.append",
      "list",
      "group_counts.max",
      "id_blocks.append",
      "float",
      "any",
      "df.unique",
      "df.notna",
      "sub.dropna",
      "required_cols.append",
      "range",
      "sorted",
      "enumerate",
      "logger.debug",
      "df.isna"
    ],
    "flowproc.domain.parsing.tissue_parser.get_tissue_full_name": [
      "logging.getLogger"
    ],
    "flowproc.domain.parsing.tissue_parser.add_mapping": [
      "set",
      "ValueError",
      "TISSUE_MAP.items",
      "text.lower",
      "self._match_patterns",
      "self.TISSUE_MAP.get",
      "isinstance",
      "self.REVERSE_MAP.items",
      "code.upper",
      "text_upper.startswith",
      "v.lower",
      "self.TISSUE_PATTERNS.items",
      "text.upper",
      "TissueParser",
      "pattern.search",
      "self._extract_code",
      "TissueParser.get_full_name",
      "self.TISSUE_MAP.keys",
      "full_name.lower",
      "re.search",
      "self._cache.clear",
      "re.compile",
      "text_lower.replace",
      "re.escape",
      "TissueParser.parse"
    ],
    "flowproc.domain.parsing.service.validate_file": [
      "DataTransformer",
      "self.data_transformer.transform",
      "self.column_detector.detect_columns",
      "DataValidator",
      "ColumnDetector",
      "self.validator.validate",
      "str",
      "CSVReader",
      "self.strategies.keys",
      "strategy.parse",
      "len",
      "self.csv_reader.read",
      "ParsingError",
      "list",
      "self.strategies.get"
    ],
    "flowproc.domain.parsing.strategies.parse": [
      "TissueParser",
      "self.parsers.append",
      "SampleIDParser",
      "print",
      "getattr",
      "WellParser",
      "callable",
      "GroupAnimalParser",
      "hasattr",
      "parser.parse",
      "issubclass",
      "df.copy",
      "TimeService",
      "parser_class"
    ],
    "flowproc.domain.parsing.validators.validate_time_consistency": [
      "sample_ids.nunique",
      "pd.api.types.is_numeric_dtype",
      "patterns.to_dict",
      "path.exists",
      "self._validate_duplicates",
      "len",
      "df.isna.sum",
      "path.glob",
      "missing_columns.append",
      "str",
      "df.dropna",
      "validation_results.append",
      "df.memory_usage",
      "validation.append",
      "self._validate_data_types",
      "path.is_dir",
      "sample_ids.value_counts",
      "path.suffix.lower",
      "df.isna",
      "df.nunique",
      "time_col.max",
      "df.duplicated.sum",
      "sample_ids.value_counts.head",
      "sample_ids.count",
      "self._validate_missing_values",
      "df.count",
      "list",
      "df.duplicated",
      "self._generate_stats",
      "path.stat",
      "results.append",
      "self._validate_required_columns",
      "time_col.min",
      "Path",
      "df.memory_usage.sum",
      "pd.read_csv"
    ],
    "flowproc.domain.parsing.column_detector.ColumnDetector.__init__": [
      "logging.getLogger"
    ],
    "flowproc.domain.parsing.column_detector.detect_metadata_columns": [
      "self.METRIC_KEYWORDS.items",
      "set",
      "series.dropna",
      "self._score_id_column",
      "series.dropna.astype",
      "len",
      "metadata.add",
      "non_null.str.contains.sum",
      "candidates.append",
      "candidates.sort",
      "non_null.unique",
      "df.select_dtypes",
      "ParsingError",
      "is_pure_metric_column",
      "col.lower",
      "any",
      "metric_map.append",
      "non_null.str.contains",
      "metric_map.items"
    ],
    "flowproc.domain.parsing.csv_reader.CSVReader.__init__": [
      "logging.getLogger"
    ],
    "flowproc.domain.parsing.csv_reader._clean_dataframe": [
      "df.dropna",
      "first_col.str.contains",
      "footer_mask.sum",
      "footer_mask.any",
      "df.str.strip",
      "df.iloc.astype",
      "ParseError",
      "df.select_dtypes",
      "df.iloc.astype.str.lower",
      "file_path.exists",
      "self._clean_dataframe",
      "logger.debug",
      "pd.read_csv"
    ],
    "flowproc.domain.parsing.group_animal_parser.extract_group_animal": [
      "logging.getLogger"
    ],
    "flowproc.domain.parsing.group_animal_parser.validate": [
      "pattern.search",
      "validate_group_animal_values",
      "self.GROUP_ANIMAL_PATTERN.search",
      "WellParser",
      "GroupAnimal",
      "re.compile",
      "well_parser.parse",
      "int",
      "GroupAnimalParser",
      "validate_sample_id_for_negative_values",
      "GroupAnimalParser.parse",
      "ParsedID",
      "self._extract_values",
      "match.group",
      "logger.warning",
      "time_parser.parse",
      "TimeService"
    ],
    "flowproc.domain.parsing.well_parser.WellParser.__init__": [
      "logging.getLogger"
    ],
    "flowproc.domain.parsing.well_parser.from_index": [
      "self._is_valid_well",
      "ord",
      "row.upper",
      "self.pattern.match",
      "re.compile",
      "match.groups",
      "int",
      "self.parse_row_col",
      "self.pattern.search",
      "self.parse",
      "chr"
    ],
    "flowproc.domain.parsing.time_parser.parse_time": [
      "logging.getLogger"
    ],
    "flowproc.domain.parsing.time_parser.parse_range": [
      "self.TIME_PATTERN.search",
      "float",
      "self.TIMECOURSE_PATTERN.search",
      "unit.lower",
      "isinstance",
      "TimeParser",
      "TimeParser.parse",
      "re.compile",
      "ValueError",
      "match.groups",
      "self.FILENAME_TIME_PATTERN.search",
      "int",
      "logger.warning",
      "self.UNIT_CONVERSIONS.get",
      "self._convert_to_hours",
      "range_pattern.search",
      "logger.debug",
      "self.TIME_PREFIX_PATTERN.search"
    ],
    "flowproc.domain.parsing.validation_utils.validate_group_animal_values": [
      "isinstance",
      "re.compile",
      "ValueError",
      "NEGATIVE_GROUP_ANIMAL_PATTERN.search",
      "logger.warning",
      "logging.getLogger"
    ],
    "flowproc.domain.parsing.data_transformer.DataTransformer.__init__": [
      "logging.getLogger"
    ],
    "flowproc.domain.parsing.data_transformer._validate_transformed_data": [
      "df.reset_index",
      "df.duplicated.any",
      "self._add_parsed_columns",
      "ValueError",
      "self.column_detector.detect_sample_id_column",
      "len",
      "df.isna.sum",
      "self.sample_parser.parse",
      "str",
      "self._parse_sample_ids",
      "df.dropna",
      "parsed_data.append",
      "self._extract_time_from_filename",
      "isinstance",
      "pd.to_numeric",
      "logger.info",
      "self._cleanup_dataframe",
      "self._validate_transformed_data",
      "ParseError",
      "df.select_dtypes",
      "logger.error",
      "logger.warning",
      "df.duplicated",
      "SampleIDParser",
      "pd.to_numeric.astype",
      "df.rename",
      "ColumnDetector",
      "df.isna.all",
      "ValidationError",
      "enumerate",
      "validate_sample_id_for_negative_values",
      "time_parser.parse",
      "logger.debug",
      "TimeService",
      "df.isna"
    ],
    "flowproc.domain.parsing.time_service.parse_formatted_time": [
      "logging.getLogger"
    ],
    "flowproc.domain.parsing.time_service.validate_time": [
      "ValueError",
      "int",
      "self.PATTERNS.match",
      "str",
      "self.PATTERNS.search",
      "str.strip",
      "isinstance",
      "match.groups",
      "match.group",
      "self.to_excel_serial",
      "self.UNIT_CONVERSIONS.get",
      "self._format_decimal",
      "unit.lower",
      "TimeFormat",
      "self._format_hm",
      "logger.warning",
      "self._convert_to_hours",
      "float",
      "_time_service.parse_formatted",
      "self._format_hm_verbose",
      "re.compile",
      "self._auto_format",
      "_time_service.format",
      "logger.debug",
      "TimeService",
      "_time_service.parse"
    ],
    "flowproc.domain.parsing.sample_id_parser.SampleIDParser.__init__": [
      "logging.getLogger"
    ],
    "flowproc.domain.parsing.sample_id_parser.clear_cache": [
      "re.sub.strip",
      "clean_id.lower",
      "text.upper.startswith",
      "self.tissue_parser.get_full_name",
      "WellParser",
      "re.sub",
      "text.lower",
      "len",
      "text.strip",
      "remaining.strip",
      "ParsedSampleID",
      "self._remove_well_pattern",
      "isinstance",
      "GroupAnimalParser",
      "clean_id.lower.endswith",
      "text.lower.startswith",
      "TissueParser",
      "text.upper",
      "self._remove_group_animal_pattern",
      "ParseError",
      "self.tissue_parser.parse",
      "logger.warning",
      "self._remove_tissue_pattern",
      "full_name.lower",
      "self.group_animal_parser.parse",
      "self._cache.clear",
      "re.escape",
      "self._parse_components",
      "validate_sample_id_for_negative_values",
      "self.well_parser.parse",
      "self.time_parser.parse",
      "self._remove_time_pattern",
      "logger.debug",
      "TimeService"
    ],
    "flowproc.domain.parsing.parsing_utils.is_likely_id_column": [
      "FileNotFoundError",
      "detector.detect_sample_id_column",
      "DataTransformer",
      "reader.read",
      "df.rename",
      "transformer.transform",
      "ColumnDetector",
      "validate_parsed_data",
      "detector._score_id_column",
      "logger.info",
      "logger.error",
      "logger.warning",
      "logging.getLogger",
      "file_path.exists",
      "validate_parsing_output",
      "CSVReader"
    ],
    "flowproc.domain.parsing.validation_service.validators.validate_with_result": [
      "logging.getLogger"
    ],
    "flowproc.domain.parsing.validation_service.validators.__bool__": [
      "df.duplicated.any",
      "validate_numeric_values",
      "empty_cols.append",
      "validate_parsed_data",
      "ValueError",
      "result.add_error",
      "len",
      "valid_duplicates.append",
      "ValidationResult",
      "df.dropna",
      "pd.to_numeric",
      "isinstance",
      "pd.to_numeric.notna.all",
      "final_result.warnings.extend",
      "self.warnings.append",
      "validate_required_columns",
      "result.add_warning",
      "self.errors.append",
      "validate_duplicate_samples",
      "logger.warning",
      "dup_rows.dropna.unique",
      "type",
      "df.duplicated",
      "df.unique",
      "dup_rows.dropna",
      "df.isna.all",
      "field",
      "validate_time_values",
      "final_result.errors.extend",
      "ValidationConfig",
      "validate_dataframe_structure",
      "pd.to_numeric.notna",
      "logger.debug",
      "df.isna"
    ],
    "flowproc.domain.export.service.ExportService.__init__": [
      "logging.getLogger"
    ],
    "flowproc.domain.export.service.get_export_info": [
      "df.to_parquet",
      "self._export_to_csv",
      "ExportError",
      "df.to_dict",
      "len",
      "str",
      "isinstance",
      "self.formatter.format_dataframe",
      "df.memory_usage",
      "config.get",
      "self.excel_writer.write_excel",
      "DataFormatter",
      "self._export_to_excel",
      "json.dump",
      "data.to_json",
      "df.isnull.sum.to_dict",
      "validate_config",
      "df.isnull.sum",
      "open",
      "self._export_single_csv",
      "info.append",
      "list",
      "ExcelWriter",
      "df.to_csv",
      "df.dtypes.to_dict",
      "self._export_single_parquet",
      "result.to_dict",
      "range",
      "df.memory_usage.sum",
      "enumerate",
      "df.isnull",
      "self._export_to_parquet",
      "Path",
      "self._export_to_json"
    ],
    "flowproc.domain.export.formatters.DataFormatter.__init__": [
      "logging.getLogger"
    ],
    "flowproc.domain.export.formatters.create_format_template": [
      "column_formats.items",
      "pd.api.types.is_numeric_dtype",
      "result.str.title",
      "format_spec.format",
      "self.default_formats.format",
      "result.str.upper",
      "format_rule.get",
      "len",
      "pd.notna",
      "df.str.title",
      "format_str.format",
      "self._format_custom",
      "isinstance",
      "self._format_number",
      "self._format_string",
      "self._add_thousands_separator",
      "self._format_datetime",
      "result.str.lower",
      "df.str.lower",
      "df.apply",
      "self._format_column",
      "format_spec.get",
      "self._format_columns",
      "self._format_rows",
      "series.astype",
      "condition",
      "callable",
      "df.select_dtypes",
      "series.apply",
      "df.dt.strftime",
      "pd.api.types.is_datetime64_any_dtype",
      "list",
      "self._apply_custom_formats",
      "global_formats.get",
      "df.str.upper",
      "formatted.apply",
      "value.split",
      "range",
      "self.default_formats.keys",
      "action",
      "pd.to_datetime",
      "series.dt.strftime",
      "self._apply_global_formats",
      "df.copy"
    ],
    "flowproc.domain.export.data_aggregator.DataAggregator.__init__": [
      "logging.getLogger"
    ],
    "flowproc.domain.export.data_aggregator.reshape_for_time_course": [
      "df_clean.groupby",
      "df_clean.groupby.size",
      "ValueError",
      "np.mean",
      "len",
      "x.std",
      "pd.DataFrame",
      "df.dropna",
      "pd.Series",
      "np.sqrt",
      "isinstance",
      "result.merge",
      "x.mean",
      "result.reset_index",
      "self.pivot_for_excel",
      "np.std",
      "logger.warning",
      "agg_methods.get",
      "pivot.reset_index",
      "df.pivot_table",
      "df_clean.groupby.agg.reset_index",
      "list",
      "agg_dict.items",
      "df_clean.groupby.agg",
      "range",
      "sorted",
      "all",
      "df_clean.groupby.size.reset_index"
    ],
    "flowproc.domain.export.sheet_builder.SheetBuilder.__init__": [
      "logging.getLogger"
    ],
    "flowproc.domain.export.sheet_builder.create_summary_sheet": [
      "pd.isna",
      "self.style_manager.format_column_by_type",
      "TimeFormatter",
      "self.style_manager.apply_header_style",
      "len",
      "self.time_formatter.format",
      "self._write_ids",
      "isinstance",
      "self._format_sheet",
      "self._write_headers",
      "row.get",
      "self.style_manager.apply_subheader_style",
      "data.iterrows",
      "ws.merge_cells",
      "self.style_manager.freeze_panes",
      "ws.cell",
      "self.style_manager.apply_alternating_rows",
      "self._write_data",
      "self.style_manager.autofit_columns",
      "summary_data.itertuples",
      "StyleManager",
      "wb.create_sheet",
      "self.style_manager.apply_borders",
      "range",
      "enumerate"
    ],
    "flowproc.domain.export.__init__._create_empty_excel": [
      "ws_vals.cell",
      "all_data.append",
      "load_and_parse_df",
      "df.notna.any",
      "group_label_map.get",
      "_get_raw_cols",
      "int",
      "wb.save",
      "_process_metric",
      "len",
      "pd.notna",
      "str",
      "min",
      "status_callback",
      "process_and_write_categories",
      "_create_sheet_pair",
      "str.strip",
      "wb.remove",
      "isinstance",
      "Workbook",
      "Alignment",
      "get_column_letter",
      "ws_ids.cell",
      "logger.info",
      "row_structure.append",
      "extract_tissue",
      "_clean_column_name",
      "df.apply",
      "_write_timecourse_data",
      "get_tissue_full_name",
      "process_csv",
      "ws.merge_cells",
      "ws.cell",
      "logger.error",
      "logger.warning",
      "f.is_file",
      "input_dir.glob",
      "list",
      "reshape_pair",
      "zip",
      "max",
      "df.unique",
      "_get_group_label_map",
      "wb.create_sheet",
      "df.notna",
      "_clean_column_name.lower",
      "map_replicates",
      "KEYWORDS.items",
      "range",
      "sorted",
      "enumerate",
      "logging.getLogger",
      "Path",
      "_autofit_columns",
      "logger.debug",
      "_write_standard_data",
      "_format_time"
    ],
    "flowproc.domain.export.excel_writer.ExcelWriter.__init__": [
      "logging.getLogger"
    ],
    "flowproc.domain.export.excel_writer._add_metadata_sheet": [
      "Font",
      "wb.save",
      "len",
      "self._auto_adjust_columns",
      "str",
      "min",
      "Side",
      "PatternFill",
      "self._add_metadata_sheet",
      "df.astype",
      "wb.remove",
      "self._write_dataframe_to_sheet",
      "df.astype.str.len.max",
      "Workbook",
      "Alignment",
      "logger.info",
      "dataframe_to_rows",
      "name.replace",
      "self._apply_sheet_formatting",
      "ws.cell",
      "logger.error",
      "df.astype.str.len",
      "max",
      "wb.create_sheet",
      "column_widths.append",
      "range",
      "enumerate",
      "self._sanitize_sheet_name",
      "Border",
      "metadata.items"
    ],
    "flowproc.domain.export.excel_formatter.ExcelFormatter.__init__": [
      "logging.getLogger"
    ],
    "flowproc.domain.export.excel_formatter.add_validation_sheet": [
      "self._reorder_sheets",
      "wb.sheetnames.copy",
      "current_sheets.remove",
      "new_order.append",
      "wb.remove",
      "StyleManager",
      "wb.move_sheet",
      "wb.create_sheet",
      "wb.sheetnames.index",
      "self.style_manager.apply_header_style",
      "self.style_manager.apply_borders",
      "new_order.extend",
      "processing_info.get",
      "ws.merge_cells",
      "ws.cell",
      "enumerate",
      "self.style_manager.autofit_columns",
      "self._format_worksheet"
    ],
    "flowproc.domain.export.time_formatter.TimeFormatter.__init__": [
      "logging.getLogger"
    ],
    "flowproc.domain.export.time_formatter.from_excel_serial": [
      "parse_formatted_time",
      "self.time_service.format",
      "self.time_service.to_excel_serial",
      "self.time_service.from_excel_serial",
      "TimeService"
    ],
    "flowproc.domain.export.replicate_mapper.ReplicateMapper.__init__": [
      "logging.getLogger"
    ],
    "flowproc.domain.export.replicate_mapper.get_replicate_summary": [
      "mapping.get",
      "ValueError",
      "int",
      "len",
      "df.isna.sum",
      "df.groupby.nunique.max",
      "group_df.dropna",
      "df.dropna",
      "df.dropna.unique",
      "duplicates.items",
      "df.groupby.nunique",
      "logger.info",
      "df.apply",
      "group_df.dropna.unique",
      "errors.append",
      "tuple",
      "df.groupby.agg",
      "df.nunique",
      "logger.warning",
      "df.groupby",
      "list",
      "max",
      "df.unique",
      "df.notna",
      "df.groupby.size",
      "unmapped.unique",
      "df.groupby.agg.reset_index",
      "range",
      "sorted",
      "enumerate",
      "self._create_mapping",
      "group_cols.append",
      "logger.debug",
      "df.notna.sum",
      "df.isna"
    ],
    "flowproc.domain.export.style_manager.StyleManager.__init__": [
      "logging.getLogger"
    ],
    "flowproc.domain.export.style_manager.freeze_panes": [
      "PatternFill",
      "float",
      "any",
      "max",
      "self._init_styles",
      "Font",
      "col_name.lower",
      "self._create_named_styles",
      "Alignment",
      "range",
      "get_column_letter",
      "NamedStyle",
      "ws.cell",
      "str",
      "len",
      "Border",
      "min",
      "Side"
    ],
    "flowproc.domain.validation.input_validator.validate_gui_inputs": [
      "logging.getLogger"
    ],
    "flowproc.domain.validation.input_validator._check_disk_space": [
      "self._validate_directory",
      "validator.validate_processing_options",
      "ValueError",
      "path.exists",
      "valid_files.extend",
      "test_file.touch",
      "result.add_error",
      "len",
      "result.errors.extend",
      "test_file.unlink",
      "self._check_disk_space",
      "str",
      "output_dir.strip",
      "dir_path.glob",
      "path_str.strip",
      "shutil.disk_usage",
      "isinstance",
      "validator.validate_gui_inputs",
      "result.warnings.extend",
      "self._validate_file",
      "validator.validate_input_paths",
      "path.is_dir",
      "file_path.suffix.lower",
      "result.valid_paths.append",
      "self.warnings.append",
      "path.mkdir",
      "validator.validate_output_directory",
      "InputValidationResult",
      "self.errors.append",
      "result.add_warning",
      "logger.warning",
      "self.validate_processing_options",
      "self.validate_output_directory",
      "result.valid_paths.extend",
      "self.validate_input_paths",
      "InputValidator",
      "InputValidationConfig",
      "file_path.stat",
      "path.stat",
      "field",
      "Path",
      "path.is_file"
    ],
    "flowproc.presentation.cli.cli.main": [
      "parser.parse_args",
      "setup_logging",
      "any",
      "logging.error",
      "parser.add_argument",
      "argparse.ArgumentParser",
      "parser.error",
      "vars",
      "main",
      "gui_main",
      "process_directory",
      "logging.info",
      "vars.values",
      "Path",
      "logging.debug"
    ],
    "flowproc.presentation.gui.main.main": [
      "logging.warning",
      "window.show",
      "get_resource_path",
      "icon_path.exists",
      "sys.exit",
      "setup_logging",
      "app.exec",
      "main",
      "QApplication",
      "QIcon",
      "app.setWindowIcon",
      "logging.info",
      "str",
      "MainWindow",
      "logging.debug"
    ],
    "flowproc.presentation.gui.config_handler.save_last_output_dir": [
      "Path.home",
      "winreg.QueryValueEx",
      "ValueError",
      "path.exists",
      "saved_path.exists",
      "line.split",
      "json.load",
      "str",
      "platform.system.lower",
      "desktop_path.exists",
      "line.split.strip.strip",
      "config.get",
      "desktop_path.replace",
      "xdg_config.exists",
      "winreg.OpenKey",
      "output_path.is_dir",
      "os.access",
      "get_user_desktop",
      "line.split.strip",
      "json.dump",
      "CONFIG_FILE.open",
      "open",
      "logger.error",
      "logger.warning",
      "Path.exists",
      "CONFIG_FILE.parent.mkdir",
      "saved_path.is_dir",
      "platform.system",
      "line.startswith",
      "logging.getLogger",
      "Path",
      "logger.debug"
    ],
    "flowproc.presentation.gui.workers.processing_worker.ProcessingManager.__init__": [
      "logging.getLogger"
    ],
    "flowproc.presentation.gui.workers.processing_worker.cleanup": [
      "self._worker.error_occurred.connect",
      "QMutexLocker",
      "load_and_parse_df",
      "process_directory",
      "int",
      "self._process_single_path",
      "len",
      "str",
      "input_path.suffix.lower",
      "ProcessingTask",
      "self._worker.isRunning",
      "input_path.is_dir",
      "self._worker.progress_updated.connect",
      "input_path.is_file",
      "ProcessingResult",
      "self.processing_completed.emit",
      "logger.info",
      "self._worker.processing_completed.connect",
      "ProcessingWorker",
      "self.status_updated.emit",
      "Slot",
      "result.error_messages.append",
      "self._worker.status_updated.connect",
      "super",
      "self._worker.cancel",
      "self.msleep",
      "self._check_cancellation",
      "logger.debug",
      "self._worker.pause",
      "self.file_processed.emit",
      "self._worker.resume",
      "self._worker.deleteLater",
      "self.progress_updated.emit",
      "process_csv",
      "gc.collect",
      "self._worker.set_task",
      "self.error_occurred.emit",
      "logger.error",
      "logger.warning",
      "QMutex",
      "self.cancel_processing",
      "Signal",
      "self._worker.wait",
      "self._worker.state_changed.connect",
      "time.time",
      "df.isna.all",
      "field",
      "self.state_changed.emit",
      "self._check_pause",
      "self._worker.start",
      "auto",
      "enumerate",
      "self._worker.terminate",
      "super.__init__",
      "self._set_state",
      "df.isna"
    ],
    "flowproc.presentation.gui.workers.validation_worker.ValidationWorker.__init__": [
      "logging.getLogger"
    ],
    "flowproc.presentation.gui.workers.validation_worker._perform_validation": [
      "super",
      "self.validation_completed.emit",
      "self._perform_validation",
      "getattr",
      "self.validation_started.emit",
      "self.validation_progress.emit",
      "validate_gui_inputs",
      "logger.error",
      "self.validation_error.emit",
      "self.start",
      "Signal",
      "str",
      "super.__init__",
      "ValidationResult"
    ],
    "flowproc.presentation.gui.controllers.processing_controller.ProcessingController.__init__": [
      "logging.getLogger"
    ],
    "flowproc.presentation.gui.controllers.processing_controller._get_processing_metrics": [
      "self.export_completed.emit",
      "self._get_data_shape",
      "data.describe",
      "self.export_started.emit",
      "self.processing_started.emit",
      "self.export_service.export_data",
      "self._get_processing_metrics",
      "self.parsing_error.emit",
      "desc.to_dict",
      "len",
      "str",
      "self.parsing_started.emit",
      "self.parse_service.parse_files",
      "self.processing_service.process_data",
      "self.processing_error.emit",
      "self.processing_options.to_dict",
      "self.processing_completed.emit",
      "logger.info",
      "super",
      "DataProcessingService",
      "hasattr",
      "logger.error",
      "Signal",
      "list",
      "ParseService",
      "ExportService",
      "self._get_data_columns",
      "self.export_error.emit",
      "self.parsing_completed.emit",
      "super.__init__"
    ],
    "flowproc.presentation.gui.controllers.main_controller.MainController.__init__": [
      "logging.getLogger"
    ],
    "flowproc.presentation.gui.controllers.main_controller.cleanup": [
      "self.main_window.on_status_updated",
      "kwargs.get",
      "self.processing_completed.connect",
      "self.processing_error.connect",
      "self.processing_started.emit",
      "self.processing_manager.resume_processing",
      "self.processing_manager.pause_processing",
      "self.validation_error.emit",
      "self.processing_manager.is_processing",
      "self.processing_error.emit",
      "ProcessingManager",
      "self.processing_started.connect",
      "self.processing_completed.emit",
      "self._connect_signals",
      "self.validate_inputs",
      "Slot",
      "super",
      "self.validation_error.connect",
      "self.processing_manager.cancel_processing",
      "DataProcessingService",
      "logger.error",
      "self.processing_manager.cleanup",
      "self.processing_manager.start_processing",
      "Signal",
      "ParseService",
      "self.main_window.on_progress_updated",
      "ExportService",
      "validate_gui_inputs",
      "Path",
      "super.__init__"
    ],
    "flowproc.presentation.gui.views.main_window.MainWindow.__init__": [
      "logging.getLogger"
    ],
    "flowproc.presentation.gui.views.main_window.on_status_updated": [
      "screen.size",
      "self.main_layout.setContentsMargins",
      "self.event_handler.handle_processing_completion",
      "self.setup_styling",
      "UIBuilder",
      "self.ui_builder.update_progress",
      "FileManager",
      "self._setup_ui",
      "int",
      "self.event_handler.handle_processing_error",
      "self.setMinimumSize",
      "StateManager",
      "QWidget",
      "min",
      "ProcessingCoordinator",
      "self.processing_coordinator.is_processing",
      "self.setSizePolicy",
      "self.event_handler.handle_validation_error",
      "self.move",
      "screen_size.height",
      "self.event_handler.connect_all_signals",
      "self.setCentralWidget",
      "QVBoxLayout",
      "self._connect_signals",
      "QApplication.primaryScreen",
      "self._center_window",
      "self.ui_builder.build_complete_ui",
      "Slot",
      "self.processing_coordinator.connect_signals",
      "super",
      "self.processing_coordinator.cleanup",
      "screen_size.width",
      "self.main_layout.setSpacing",
      "hasattr",
      "self.width",
      "self.ui_builder.update_layout_for_size",
      "self._setup_window",
      "event.ignore",
      "self.resize",
      "EventHandler",
      "super.resizeEvent",
      "self.setWindowTitle",
      "self.ui_builder.update_status",
      "self.height",
      "event.accept",
      "self.ui_builder.set_processing_state",
      "super.__init__",
      "self.processing_coordinator.handle_close_request"
    ],
    "flowproc.presentation.gui.views.mixins.validation_mixin.validate_output_directory": [
      "validate_input_paths",
      "len",
      "validate_output_directory"
    ],
    "flowproc.presentation.gui.views.mixins.styling_mixin.StylingMixin.__init__": [
      "logging.getLogger"
    ],
    "flowproc.presentation.gui.views.mixins.styling_mixin.setup_application_icon": [
      "get_resource_path",
      "self.setup_palette_and_style",
      "icon_path.exists",
      "QApplication.instance",
      "self.setWindowIcon",
      "app.setPalette",
      "cast",
      "QColor",
      "QIcon",
      "app.setStyleSheet",
      "logger.info",
      "QPalette",
      "logger.warning",
      "self.setup_application_icon",
      "str",
      "dark_palette.setColor"
    ],
    "flowproc.presentation.gui.views.components.state_manager.StateManager.__init__": [
      "logging.getLogger"
    ],
    "flowproc.presentation.gui.views.components.state_manager.restore_state": [
      "self._state.current_group_labels.copy",
      "self._state_observers.append",
      "field",
      "self._state_observers.remove",
      "observer",
      "self._state.preview_paths.copy",
      "WindowState",
      "logger.error",
      "len",
      "labels.copy",
      "paths.copy",
      "self._notify_observers",
      "logger.debug"
    ],
    "flowproc.presentation.gui.views.components.event_handler.EventHandler.__init__": [
      "logging.getLogger"
    ],
    "flowproc.presentation.gui.views.components.event_handler.handle_validation_error": [
      "parse_service.load_and_parse_df",
      "parse_range_or_list",
      "QFileDialog.getOpenFileNames",
      "save_last_output_dir",
      "df.dropna",
      "self.state_manager.update_status",
      "self.update_preview_paths",
      "self.main_window.ui_builder.get_widget",
      "ui_builder.get_widget.text",
      "USER_GROUPS.clear",
      "ui_builder.get_widget.clear",
      "ui_builder.get_widget.stateChanged.connect",
      "super.__init__",
      "logger.debug",
      "ui_builder.get_widget.setText",
      "preview_window.setMinimumSize",
      "mode_text.lower",
      "len",
      "dialog.set_labels",
      "self.state_manager.current_group_labels.copy",
      "output_path.mkdir",
      "logger.info",
      "path_obj.suffix.lower",
      "QTableWidgetItem",
      "table.setHorizontalHeaderLabels",
      "self.main_window.ui_builder.get_widget.text.strip",
      "logger.warning",
      "QMessageBox.warning",
      "self.main_window.ui_builder.get_widget.text",
      "Path",
      "table.setItem",
      "QMessageBox.information",
      "ui_builder.get_widget.textChanged.connect",
      "dialog.get_labels",
      "preview_window.setCentralWidget",
      "self.processing_coordinator.start_processing",
      "ui_builder.get_widget.text.split",
      "map",
      "str",
      "output_path.exists",
      "QMessageBox.critical",
      "GroupLabelsDialog",
      "p.strip",
      "p.exists",
      "path_obj.is_file",
      "self.state_manager.clear_preview_data",
      "VisualizationDisplayDialog",
      "Path.is_file",
      "ui_builder.get_widget.clicked.connect",
      "path_obj.exists",
      "bool",
      "ui_builder.get_widget",
      "table.setSizePolicy",
      "df.isna.all",
      "preview_window.setWindowTitle",
      "df.isna",
      "Path.home",
      "load_last_output_dir",
      "ValueError",
      "ui_builder.toggle_manual_mode",
      "USER_REPLICATES.clear",
      "df.dropna.unique",
      "QMainWindow",
      "dialog.exec",
      "ui_builder.get_widget.text.strip",
      "Slot",
      "super",
      "self.main_window.ui_builder.get_widget.text.split",
      "QTableWidget",
      "table.horizontalHeader",
      "logger.error",
      "display_dialog.show",
      "Path.exists",
      "QFileDialog.getExistingDirectory",
      "ParseService",
      "self.main_window.ui_builder.get_widget.isChecked",
      "sorted",
      "table.horizontalHeader.setSectionResizeMode",
      "preview_window.show",
      "Path.suffix.lower"
    ],
    "flowproc.presentation.gui.views.components.ui_builder.UIBuilder.__init__": [
      "logging.getLogger"
    ],
    "flowproc.presentation.gui.views.components.ui_builder.update_layout_for_size": [
      "manual_layout.setContentsMargins",
      "input_layout.setSpacing",
      "input_label.setStyleSheet",
      "replicate_layout.addWidget",
      "out_dir_layout.setContentsMargins",
      "input_layout.setContentsMargins",
      "right_layout.addWidget",
      "self.widgets.setFixedHeight",
      "QLineEdit",
      "QProgressBar",
      "left_layout.addWidget",
      "QLabel",
      "self.widgets.setFixedWidth",
      "self.widgets.setObjectName",
      "self.widgets.setAlignment",
      "group_layout.setSpacing",
      "checkbox_layout.addStretch",
      "manual_row_layout.addSpacing",
      "logger.debug",
      "group_layout.setContentsMargins",
      "self._build_options_group",
      "self._build_process_controls",
      "out_dir_input_layout.addWidget",
      "self._build_progress_section",
      "parent_layout.addStretch",
      "controls_layout.addWidget",
      "out_dir_input_layout.setSpacing",
      "replicate_layout.setContentsMargins",
      "out_dir_label.setStyleSheet",
      "controls_layout.addStretch",
      "manual_layout.addLayout",
      "io_layout.setSpacing",
      "out_dir_layout.addWidget",
      "input_input_layout.addWidget",
      "options_label.setStyleSheet",
      "input_layout.addWidget",
      "replicate_layout.setSpacing",
      "self.widgets.setToolTip",
      "QWidget",
      "replicate_label.setStyleSheet",
      "replicate_label.setAlignment",
      "self.main_window.main_layout.setSpacing",
      "options_layout.addWidget",
      "self.widgets.setValue",
      "input_input_layout.setContentsMargins",
      "self.widgets.get",
      "options_layout.addLayout",
      "tooltips.items",
      "self._setup_tooltips",
      "self.widgets.setText",
      "self.widgets.setSizePolicy",
      "hasattr",
      "io_layout.addWidget",
      "QGroupBox",
      "self.widgets.setMinimumHeight",
      "out_dir_input_layout.setContentsMargins",
      "group_label.setAlignment",
      "middle_layout.addWidget",
      "io_label.setStyleSheet",
      "controls_layout.setContentsMargins",
      "parent_layout.addWidget",
      "group_label.setStyleSheet",
      "checkbox_layout.addWidget",
      "load_last_output_dir",
      "self.widgets.setEnabled",
      "out_dir_layout.setSpacing",
      "io_layout.setContentsMargins",
      "QCheckBox",
      "DropLineEdit",
      "QVBoxLayout",
      "self._build_io_group",
      "manual_row_layout.addLayout",
      "options_layout.setSpacing",
      "QPushButton",
      "self.widgets.setVisible",
      "input_input_layout.setSpacing",
      "group_layout.addWidget",
      "QHBoxLayout",
      "self.widgets.setStyleSheet",
      "manual_layout.setSpacing",
      "right_layout.addStretch",
      "self.main_window.main_layout.setContentsMargins"
    ],
    "flowproc.presentation.gui.views.components.visualization_coordinator.VisualizationCoordinator.__init__": [
      "logging.getLogger"
    ],
    "flowproc.presentation.gui.views.components.visualization_coordinator.cleanup": [
      "self.visualization_started.emit",
      "self.options_dialog.deleteLater",
      "self.display_dialog.deleteLater",
      "self.visualization_error.emit",
      "str",
      "self.display_dialog.set_options",
      "self.display_dialog.show",
      "self.options_dialog.exec",
      "logger.info",
      "super",
      "self._show_options_dialog",
      "self.visualization_completed.emit",
      "VisualizationDisplayDialog",
      "self.options_dialog.parent",
      "logger.error",
      "logger.warning",
      "self.display_dialog.isVisible",
      "Signal",
      "VisualizationOptionsDialog",
      "self.display_dialog.plot_generated.connect",
      "self._show_display_dialog",
      "self.options_dialog.options_configured.connect",
      "super.__init__"
    ],
    "flowproc.presentation.gui.views.components.processing_coordinator.ProcessingCoordinator.__init__": [
      "logging.getLogger"
    ],
    "flowproc.presentation.gui.views.components.processing_coordinator._on_processing_error": [
      "self.processing_completed.connect",
      "self.processing_error.connect",
      "self.processing_started.emit",
      "self.processing_cancelled.emit",
      "time_plot",
      "self.processing_manager.resume_processing",
      "self.processing_manager.pause_processing",
      "str",
      "self.processing_manager.is_processing",
      "self.processing_error.emit",
      "ProcessingManager",
      "QMessageBox.critical",
      "self.processing_started.connect",
      "self.processing_completed.emit",
      "logger.info",
      "QMessageBox.question",
      "Slot",
      "super",
      "logger.debug",
      "self.is_processing",
      "self.processing_manager.cancel_processing",
      "logger.error",
      "self.processing_manager.start_processing",
      "self.processing_manager.cleanup",
      "self.cancel_processing",
      "Signal",
      "tempfile.NamedTemporaryFile",
      "params.get",
      "self.processing_manager.get_state",
      "plot",
      "Path",
      "super.__init__"
    ],
    "flowproc.presentation.gui.views.components.file_manager.FileManager.__init__": [
      "logging.getLogger"
    ],
    "flowproc.presentation.gui.views.components.file_manager._get_unique_values": [
      "load_and_parse_df",
      "self._preview_windows.append",
      "preview_window.setCentralWidget",
      "path.exists",
      "dialog.setOption",
      "preview_window.setMinimumSize",
      "self._get_unique_values",
      "map",
      "len",
      "path.glob",
      "str",
      "df.dropna",
      "df.dropna.unique",
      "QMainWindow",
      "dialog.exec",
      "QFileDialog",
      "valid_paths.append",
      "dialog.setFileMode",
      "logger.info",
      "self._create_preview_table",
      "path.is_dir",
      "self._validate_and_expand_paths",
      "path_obj.suffix.lower",
      "path.suffix.lower",
      "QTableWidgetItem",
      "path_obj.is_file",
      "QTableWidget",
      "table.horizontalHeader",
      "table.setHorizontalHeaderLabels",
      "path_obj.exists",
      "dialog.setNameFilter",
      "hasattr",
      "logger.error",
      "logger.warning",
      "QMessageBox.warning",
      "list",
      "table.setSizePolicy",
      "dialog.selectedFiles",
      "df.isna.all",
      "sorted",
      "enumerate",
      "preview_window.show",
      "valid_paths.extend",
      "table.horizontalHeader.setSectionResizeMode",
      "Path",
      "path.is_file",
      "table.setItem",
      "preview_window.setWindowTitle",
      "df.isna"
    ],
    "flowproc.presentation.gui.views.components.gui_validator.validate_inputs": [
      "gui_validator.validate_inputs",
      "GUIValidator",
      "validate_gui_inputs",
      "logger.warning",
      "logging.getLogger"
    ],
    "flowproc.presentation.gui.views.dialogs.group_labels_dialog.set_labels": [
      "self.labels_list.addItem",
      "self.labels_changed.emit",
      "self.setModal",
      "self._setup_ui",
      "self.ok_button.setDefault",
      "text.strip",
      "self._populate_list",
      "paste_input_layout.addWidget",
      "paste_layout.addWidget",
      "QListWidgetItem",
      "paste_instructions.setStyleSheet",
      "QMessageBox.question",
      "self.paste_input.setMaximumHeight",
      "QInputDialog.getMultiLineText",
      "self.labels.clear",
      "QLabel",
      "line.strip",
      "text.split",
      "self.clear_button.clicked.connect",
      "self.setWindowTitle",
      "QTextEdit",
      "self._setup_styling",
      "super.__init__",
      "self.paste_button.clicked.connect",
      "self.paste_input.setMinimumHeight",
      "self.setStyleSheet",
      "self.labels.append",
      "self.paste_input.clear",
      "len",
      "paste_layout.addLayout",
      "self.labels_list.clear",
      "self.labels_list.setCurrentItem",
      "self.edit_button.clicked.connect",
      "self.labels_list.itemDoubleClicked.connect",
      "QMessageBox.warning",
      "self.labels.remove",
      "self.labels_list.setSelectionMode",
      "QMessageBox.information",
      "self.labels_list.selectedItems",
      "layout.addLayout",
      "self.labels_list.row",
      "labels.copy",
      "self.labels_list.takeItem",
      "item.text",
      "self.paste_input.toPlainText",
      "layout.setSpacing",
      "self.paste_input.toPlainText.strip",
      "list_buttons_layout.addWidget",
      "item.setText",
      "self.edit_button.setEnabled",
      "self.remove_button.setEnabled",
      "self.export_button.clicked.connect",
      "QGroupBox",
      "dialog_buttons_layout.addWidget",
      "self.import_button.clicked.connect",
      "layout.addWidget",
      "paste_instructions.setWordWrap",
      "self.labels.index",
      "QInputDialog.getText",
      "list_layout.addLayout",
      "label.strip",
      "QListWidget",
      "dialog_buttons_layout.addStretch",
      "self.labels_list.itemSelectionChanged.connect",
      "labels.append",
      "self.labels.copy",
      "QVBoxLayout",
      "list_layout.addWidget",
      "instructions.setWordWrap",
      "self.paste_input.setPlaceholderText",
      "self.cancel_button.clicked.connect",
      "super",
      "instructions.setStyleSheet",
      "list_buttons_layout.addStretch",
      "QPushButton",
      "Signal",
      "self.resize",
      "import_export_layout.addWidget",
      "QHBoxLayout",
      "new_text.strip",
      "self.remove_button.clicked.connect",
      "self.ok_button.clicked.connect"
    ],
    "flowproc.presentation.gui.views.dialogs.visualization_display_dialog.VisualizationDisplayDialog.__init__": [
      "logging.getLogger"
    ],
    "flowproc.presentation.gui.views.dialogs.visualization_display_dialog._show_error_message": [
      "x_columns.extend",
      "self.timecourse_strategy_combo.currentTextChanged.connect",
      "screen.size",
      "self.tissue_filter_combo.addItem",
      "self.df.dropna.unique",
      "QComboBox",
      "config_column.setSpacing",
      "self.plot_mode_combo.currentTextChanged.connect",
      "self.setModal",
      "self._setup_ui",
      "self._setup_configuration_section",
      "self.plot_type_combo.currentTextChanged.connect",
      "self._is_time_column",
      "self._update_timer.start",
      "self.custom_y_axis_combo.clear",
      "x_axis_layout.setSpacing",
      "self.tissue_filter_combo.currentTextChanged.connect",
      "main_layout.setContentsMargins",
      "left_section.addLayout",
      "min",
      "config_group.setFixedHeight",
      "self.time_filter_combo.setCurrentIndex",
      "keyword.lower",
      "self._get_current_options",
      "close_button.clicked.connect",
      "self.y_axis_combo.setEnabled",
      "self.custom_x_axis_combo.setCurrentIndex",
      "mode_layout.addWidget",
      "config_layout.addLayout",
      "bottom_row.setSpacing",
      "config_column.addLayout",
      "y_axis_layout.setSpacing",
      "QTimer",
      "self.plot_mode_combo.setCurrentIndex",
      "self.tissue_filter_combo.findText",
      "self.plot_type_combo.addItems",
      "self.plot_type_combo.setCurrentText",
      "self.y_axis_combo.currentTextChanged.connect",
      "time_layout.setSpacing",
      "self.open_browser_button.clicked.connect",
      "self.temp_html_file.exists",
      "self.y_axis_combo.currentText",
      "screen_size.width",
      "QLabel",
      "self.time_filter_combo.clear",
      "QWebEngineView",
      "self.custom_y_axis_combo.setEnabled",
      "strategy_layout.addWidget",
      "self.custom_y_axis_combo.setCurrentIndex",
      "self._analyze_data",
      "self.custom_x_axis_combo.currentTextChanged.connect",
      "self._on_option_changed",
      "re.search",
      "self.df.dropna",
      "self.y_axis_combo.addItem",
      "y_axis_layout.addWidget",
      "self.setWindowTitle",
      "main_layout.addStretch",
      "self.x_axis_combo.setCurrentText",
      "strategy_layout.setSpacing",
      "event.accept",
      "self.time_filter_combo.addItem",
      "QUrl.fromLocalFile",
      "self.df.unique",
      "self.time_filter_combo.setEnabled",
      "self.tissue_filter_combo.currentText",
      "self._setup_styling",
      "super.__init__",
      "self.timecourse_strategy_combo.setCurrentText",
      "custom_y_layout.addWidget",
      "self.setStyleSheet",
      "button_layout.addWidget",
      "self.y_axis_combo.findText",
      "self.use_custom_axes_checkbox.toggled.connect",
      "x_columns.append",
      "self.save_button.setEnabled",
      "self.custom_x_axis_combo.findText",
      "self.setLayout",
      "combo_box.setMaxVisibleItems",
      "self.plot_mode_combo.currentText",
      "len",
      "covariates_column.setSpacing",
      "self.custom_y_axis_combo.currentText",
      "categorical_columns.append",
      "mode_label.setFixedWidth",
      "self._setup_plot_section",
      "screen_size.height",
      "self.x_axis_combo.currentTextChanged.connect",
      "self._populate_covariates_options",
      "self.tissue_filter_combo.clear",
      "logger.info",
      "mode_layout.setSpacing",
      "self.web_view.setMinimumHeight",
      "self.tissue_filter_combo.isEnabled",
      "config_layout.setSpacing",
      "plot_type_layout.setSpacing",
      "self.custom_x_axis_combo.addItem",
      "self._identify_summary_metrics",
      "self.y_axis_combo.setCurrentText",
      "self.save_button.clicked.connect",
      "left_section.setSpacing",
      "config_layout.setContentsMargins",
      "custom_column.addLayout",
      "self.use_custom_axes_checkbox.isChecked",
      "covariates_column.setAlignment",
      "logger.warning",
      "self.time_filter_combo.currentTextChanged.connect",
      "QMessageBox.warning",
      "self.height",
      "self.x_axis_combo.setCurrentIndex",
      "plot",
      "self.timecourse_strategy_combo.currentText",
      "self.y_axis_combo.setCurrentIndex",
      "Path",
      "self.y_axis_combo.clear",
      "QMessageBox.information",
      "self.custom_y_axis_combo.addItem",
      "self.custom_x_axis_combo.clear",
      "self.x_axis_combo.setEnabled",
      "custom_column.addSpacing",
      "self._apply_options",
      "QFileDialog.getSaveFileName",
      "load_and_parse_df",
      "self.web_view.setMinimumWidth",
      "custom_y_label.setFixedWidth",
      "main_layout.addLayout",
      "self.time_course_checkbox.setChecked",
      "update_button.clicked.connect",
      "self.x_axis_combo.findText",
      "str",
      "custom_column.addWidget",
      "self.web_view.devicePixelRatio",
      "self.timecourse_strategy_combo.setCurrentIndex",
      "summary_metrics.append",
      "self.timecourse_strategy_combo.findText",
      "config_column.setAlignment",
      "self.tissue_filter_combo.setEnabled",
      "self.timecourse_strategy_combo.setEnabled",
      "KEYWORDS.keys",
      "combo_box.setMinimumWidth",
      "self.tissue_filter_combo.setCurrentIndex",
      "self.plot_generated.emit",
      "hasattr",
      "shutil.copy2",
      "custom_x_layout.setSpacing",
      "self.plot_type_combo.findText",
      "self.timecourse_strategy_combo.addItems",
      "self._identify_categorical_columns",
      "QGroupBox",
      "self.x_axis_combo.clear",
      "self.custom_x_axis_combo.currentText",
      "any",
      "column_name.lower",
      "max",
      "x_axis_layout.addWidget",
      "self.csv_path.exists",
      "self._generate_placeholder_plot",
      "self.time_filter_combo.currentText",
      "parent_layout.addLayout",
      "tissue_layout.addWidget",
      "parent_layout.addWidget",
      "self._setup_buttons",
      "self.status_label.setText",
      "self.web_view.setMaximumSize",
      "tissue_label.setFixedWidth",
      "bottom_row.addLayout",
      "int",
      "self.plot_mode_combo.addItems",
      "VisualizationOptions",
      "time_plot",
      "tissue_layout.setSpacing",
      "self.plot_type_combo.currentText",
      "self.time_filter_combo.findText",
      "self._update_timer.timeout.connect",
      "time_label.setFixedWidth",
      "QCheckBox",
      "self.time_filter_combo.isEnabled",
      "self.custom_y_axis_combo.findText",
      "QVBoxLayout",
      "self._generate_plot",
      "QApplication.primaryScreen",
      "custom_x_layout.addWidget",
      "self.web_view.load",
      "self._show_error_message",
      "self.plot_mode_combo.findText",
      "super",
      "self.web_view.setHtml",
      "self._configure_combo_box_view",
      "custom_column.setSpacing",
      "main_layout.setSpacing",
      "QPushButton",
      "x_label.setFixedWidth",
      "logger.error",
      "self.use_custom_axes_checkbox.setChecked",
      "self._populate_column_options",
      "Signal",
      "strategy_label.setFixedWidth",
      "self.resize",
      "self.x_axis_combo.addItem",
      "col.lower",
      "QHBoxLayout",
      "tempfile.NamedTemporaryFile",
      "time_plot_faceted",
      "covariates_column.addLayout",
      "super.resizeEvent",
      "y_label.setFixedWidth",
      "self._update_timer.setSingleShot",
      "webbrowser.open",
      "custom_x_label.setFixedWidth",
      "self.custom_y_axis_combo.currentTextChanged.connect",
      "self.open_browser_button.setEnabled",
      "custom_y_layout.setSpacing",
      "self.x_axis_combo.currentText",
      "plot_type_layout.addWidget",
      "sorted",
      "self.plot_mode_combo.setCurrentText",
      "self.temp_html_file.unlink",
      "type_label.setFixedWidth",
      "config_group.setLayout",
      "button_layout.addStretch",
      "self._update_timer.stop",
      "self.custom_x_axis_combo.setEnabled",
      "self.plot_type_combo.setCurrentIndex",
      "custom_column.setAlignment",
      "time_layout.addWidget"
    ],
    "flowproc.presentation.gui.views.dialogs.preview_dialog.get_selected_file": [
      "QComboBox",
      "self._update_statistics",
      "self.setModal",
      "self._setup_ui",
      "self.accept",
      "self.row_limit_spin.setValue",
      "self.preview_worker.error_occurred.connect",
      "QProgressBar",
      "self._load_preview",
      "QLabel",
      "self.error_occurred.emit",
      "self.setWindowTitle",
      "self.refresh_button.clicked.connect",
      "options_layout.addRow",
      "self.stats_label.setText",
      "CSVPreviewWorker",
      "df.memory_usage.sum",
      "self._setup_styling",
      "self.select_button.setEnabled",
      "super.__init__",
      "self.setStyleSheet",
      "button_layout.addWidget",
      "item.setFlags",
      "len",
      "self.file_combo.setCurrentIndex",
      "item.flags",
      "self.preview_worker.isRunning",
      "df.iterrows",
      "QSpinBox",
      "self._populate_file_selector",
      "self.preview_worker.data_loaded.connect",
      "QTableWidgetItem",
      "self.row_limit_spin.valueChanged.connect",
      "self.table.setRowCount",
      "self.table.horizontalHeader",
      "self.file_combo.addItem",
      "self.table.horizontalHeader.setStretchLastSection",
      "file_path.exists",
      "self.stats_layout.addRow",
      "self.table.setItem",
      "Path",
      "pd.read_csv",
      "self.table.setHorizontalHeaderLabels",
      "self.preview_worker.start",
      "self.preview_worker.quit",
      "layout.addLayout",
      "str",
      "self._populate_table",
      "self.file_combo.currentTextChanged.connect",
      "QMessageBox.critical",
      "self.file_selected.emit",
      "self.row_limit_spin.setSuffix",
      "df.memory_usage",
      "layout.setSpacing",
      "self.select_button.clicked.connect",
      "self.preview_worker.wait",
      "self.file_combo.clear",
      "self.close_button.clicked.connect",
      "QGroupBox",
      "self.table.setColumnCount",
      "self._clear_preview",
      "layout.addWidget",
      "self.data_loaded.emit",
      "self.row_limit_spin.setRange",
      "self.table.horizontalHeader.setSectionResizeMode",
      "QVBoxLayout",
      "self.progress_bar.setVisible",
      "super",
      "QTableWidget",
      "file_layout.addRow",
      "QPushButton",
      "stats_text.strip",
      "self.file_combo.currentData",
      "Signal",
      "self.resize",
      "QHBoxLayout",
      "self.refresh_button.setEnabled",
      "self.table.setAlternatingRowColors",
      "self.row_limit_spin.value",
      "QFormLayout",
      "self.progress_bar.setRange",
      "enumerate",
      "button_layout.addStretch"
    ],
    "flowproc.presentation.gui.views.dialogs.visualization_options_dialog.VisualizationOptionsDialog.__init__": [
      "logging.getLogger"
    ],
    "flowproc.presentation.gui.views.dialogs.visualization_options_dialog.get_visualization_options": [
      "self._setup_covariates_section",
      "x_columns.extend",
      "self.tissue_filter_combo.addItem",
      "QComboBox",
      "self.setModal",
      "self._setup_ui",
      "self.accept",
      "self.custom_y_axis_combo.clear",
      "self.time_filter_combo.setCurrentIndex",
      "keyword.lower",
      "self.y_axis_combo.setEnabled",
      "self.custom_x_axis_combo.setCurrentIndex",
      "self._get_visualization_options",
      "self.tissue_filter_combo.findText",
      "self.plot_type_combo.addItems",
      "self.plot_type_combo.setCurrentText",
      "self.width_spinbox.setValue",
      "self.y_axis_combo.currentText",
      "QLabel",
      "self.time_filter_combo.clear",
      "self.custom_y_axis_combo.setEnabled",
      "self.custom_y_axis_combo.setCurrentIndex",
      "main_layout.addWidget",
      "QScrollArea",
      "y_axis_layout.addWidget",
      "self.y_axis_combo.addItem",
      "self.setWindowTitle",
      "scroll_area.setWidgetResizable",
      "basic_group.setLayout",
      "self.x_axis_combo.setCurrentText",
      "self.time_filter_combo.addItem",
      "cancel_button.clicked.connect",
      "self.df.unique",
      "self.options_configured.emit",
      "self.time_filter_combo.setEnabled",
      "self.tissue_filter_combo.currentText",
      "self._setup_styling",
      "super.__init__",
      "custom_y_layout.addWidget",
      "self._setup_advanced_options",
      "self._analyze_data_simple",
      "self.setStyleSheet",
      "covariates_group.setLayout",
      "configure_button.clicked.connect",
      "button_layout.addWidget",
      "self.y_axis_combo.findText",
      "self.use_custom_axes_checkbox.toggled.connect",
      "dimensions_layout.addWidget",
      "x_columns.append",
      "self.custom_x_axis_combo.findText",
      "self.setLayout",
      "self.height_spinbox.setRange",
      "len",
      "self.custom_y_axis_combo.currentText",
      "categorical_columns.append",
      "self.time_course_strategy_combo.currentText",
      "self.tissue_filter_combo.clear",
      "self._populate_covariates_options",
      "QSpinBox",
      "self.height_spinbox.setValue",
      "self.tissue_filter_combo.isEnabled",
      "self._identify_summary_metrics",
      "self.custom_x_axis_combo.addItem",
      "self.y_axis_combo.setCurrentText",
      "self.height_spinbox.value",
      "self.use_custom_axes_checkbox.isChecked",
      "logger.warning",
      "QMessageBox.warning",
      "info_group.setLayout",
      "self.x_axis_combo.setCurrentIndex",
      "self.y_axis_combo.setCurrentIndex",
      "self._setup_data_info",
      "self.y_axis_combo.clear",
      "self.custom_x_axis_combo.clear",
      "self.custom_y_axis_combo.addItem",
      "self.x_axis_combo.setEnabled",
      "load_and_parse_df",
      "self.time_course_checkbox.setChecked",
      "layout.addLayout",
      "map",
      "self.x_axis_combo.findText",
      "QWidget",
      "str",
      "summary_metrics.append",
      "self.tissue_filter_combo.setEnabled",
      "KEYWORDS.keys",
      "self.tissue_filter_combo.setCurrentIndex",
      "self.plot_type_combo.findText",
      "self._identify_categorical_columns",
      "QGroupBox",
      "self.x_axis_combo.clear",
      "self.custom_x_axis_combo.currentText",
      "any",
      "x_axis_layout.addWidget",
      "self.csv_path.exists",
      "self.time_filter_combo.currentText",
      "parent_layout.addLayout",
      "layout.addWidget",
      "tissue_layout.addWidget",
      "parent_layout.addWidget",
      "self._setup_buttons",
      "self.width_spinbox.value",
      "self._apply_current_options",
      "self.width_spinbox.setRange",
      "VisualizationOptions",
      "configure_button.setDefault",
      "self.plot_type_combo.currentText",
      "scroll_area.setWidget",
      "self.time_filter_combo.findText",
      "QCheckBox",
      "self.time_filter_combo.isEnabled",
      "self.custom_y_axis_combo.findText",
      "QVBoxLayout",
      "custom_x_layout.addWidget",
      "super",
      "QPushButton",
      "logger.error",
      "self._populate_column_options",
      "Signal",
      "self.resize",
      "self.x_axis_combo.addItem",
      "col.lower",
      "QHBoxLayout",
      "df.unique",
      "self.x_axis_combo.currentText",
      "self.data_info_label.setText",
      "plot_type_layout.addWidget",
      "advanced_group.setLayout",
      "sorted",
      "self._update_data_info",
      "self.time_course_checkbox.isChecked",
      "button_layout.addStretch",
      "self.use_custom_axes_checkbox.setChecked",
      "self.custom_x_axis_combo.setEnabled",
      "self.plot_type_combo.setCurrentIndex",
      "self._setup_basic_options",
      "time_layout.addWidget"
    ],
    "flowproc.presentation.gui.views.widgets.progress_widget.is_progress_active": [
      "time_controls_layout.setContentsMargins",
      "self.setStyleSheet",
      "self.status_label.setText",
      "time_controls_layout.addWidget",
      "self._setup_ui",
      "int",
      "self.time_label.setAlignment",
      "self.cancel_button.setEnabled",
      "self.status_label.setWordWrap",
      "time_controls_layout.addStretch",
      "QVBoxLayout",
      "layout.setSpacing",
      "self.update_timer.timeout.connect",
      "self.update_timer.stop",
      "QProgressBar",
      "self.cancel_button.clicked.connect",
      "self.update_timer.isActive",
      "super",
      "QTimer",
      "self._format_time",
      "QPushButton",
      "self.progress_bar.setValue",
      "QLabel",
      "QFrame",
      "self.update_timer.start",
      "Signal",
      "QHBoxLayout",
      "self.time_label.setText",
      "time.time",
      "layout.setContentsMargins",
      "self.progress_bar.setRange",
      "layout.addWidget",
      "self.status_label.setAlignment",
      "self._setup_styling",
      "self.progress_bar.setFormat",
      "super.__init__",
      "self.progress_bar.setTextVisible"
    ],
    "flowproc.presentation.gui.views.widgets.drop_line_edit.DropLineEdit.__init__": [
      "logging.getLogger"
    ],
    "flowproc.presentation.gui.views.widgets.drop_line_edit.dropEvent": [
      "p.suffix.lower",
      "mime_data.hasUrls",
      "self.text.split",
      "self.setAcceptDrops",
      "dict.fromkeys",
      "self.setReadOnly",
      "event.acceptProposedAction",
      "valid_paths.append",
      "event.mimeData.urls",
      "self.text",
      "self.setText",
      "super",
      "self.parent",
      "event.mimeData",
      "logger.debug",
      "url.toLocalFile",
      "mime_data.urls",
      "event.ignore",
      "QMessageBox.warning",
      "list",
      "event.mimeData.hasUrls",
      "p.is_dir",
      "Path",
      "super.__init__"
    ]
  },
  "function_definitions": {
    "flowproc.setup_dependencies": [
      "main",
      "install_flowproc_dependencies"
    ],
    "flowproc.config": [
      "parse_range_or_list",
      "__init__"
    ],
    "flowproc.logging_config": [
      "on_shutdown",
      "custom_flush",
      "setup_logging"
    ],
    "flowproc.resource_utils": [
      "get_resource_path",
      "get_package_root",
      "get_app_data_dir",
      "_initialize_directories",
      "is_briefcase",
      "_get_fallback_locations",
      "ensure_writable_dir",
      "get_cache_dir",
      "get_data_path",
      "get_config_dir",
      "is_pyinstaller"
    ],
    "flowproc.__init__": [
      "main"
    ],
    "flowproc.__main__": [
      "main"
    ],
    "flowproc.core.models": [
      "validate_input_paths",
      "validate_output_dir",
      "validate_theme"
    ],
    "flowproc.core.protocols": [
      "render",
      "parse",
      "process",
      "save_data",
      "visualize",
      "update_config",
      "get_config",
      "validate",
      "cleanup",
      "export",
      "load_data",
      "initialize"
    ],
    "flowproc.core.constants": [
      "is_pure_metric_column"
    ],
    "flowproc.core.validation": [
      "validate_visualization_config",
      "__init__",
      "add_validator",
      "remove_validator",
      "validate_workflow_config",
      "validate_export_config",
      "validation_error_handler",
      "warnings",
      "wrapper",
      "add_issue",
      "_validate_domain_config",
      "errors",
      "validate_config",
      "to_dict",
      "__str__",
      "get_configuration_validator",
      "validate",
      "validate_paths_config",
      "info",
      "_setup_default_validators",
      "validate_processing_config"
    ],
    "flowproc.application.container": [
      "register_singleton",
      "register",
      "get_singleton",
      "get",
      "__init__",
      "_register_defaults"
    ],
    "flowproc.application.exceptions": [
      "__str__",
      "__init__"
    ],
    "flowproc.application.workflows.visualization": [
      "create_individual_plots",
      "validate_visualization_config",
      "__init__",
      "create_dashboard",
      "create_comparison_plots",
      "get_visualization_capabilities",
      "create_time_series_plots"
    ],
    "flowproc.application.workflows.data_processing": [
      "get_workflow_info",
      "_export_stage",
      "_register_default_strategies",
      "validate_config",
      "__init__",
      "process_file",
      "process_batch",
      "_visualization_stage",
      "_get_processing_stats",
      "_processing_stage",
      "_parse_stage"
    ],
    "flowproc.application.handlers.event_handler": [
      "emit_visualization_event",
      "setup_logging",
      "get_event_history",
      "emit_export_event",
      "__init__",
      "_event_to_dict",
      "setup_notifications",
      "_log_event",
      "emit_processing_event",
      "emit_error_event",
      "_notify_event",
      "get_event_summary",
      "clear_event_history",
      "unregister_listener",
      "register_notification_callback",
      "emit_event",
      "emit_warning_event",
      "_notify_listeners",
      "register_listener"
    ],
    "flowproc.application.handlers.error_handler": [
      "handle_error",
      "handle_errors",
      "__init__",
      "_permission_error_recovery",
      "decorator",
      "handle_errors_with_context",
      "register_error_callback",
      "_parsing_error_callback",
      "_call_error_callbacks",
      "attempt_recovery",
      "get_error_summary",
      "wrapper",
      "clear_error_history",
      "_file_not_found_recovery",
      "get_error_history",
      "_default_error_callback",
      "_processing_error_callback",
      "setup_error_handling",
      "register_recovery_strategy",
      "_validation_error_callback"
    ],
    "flowproc.infrastructure.config.settings": [
      "set",
      "get_all",
      "save",
      "validate_theme",
      "get",
      "__init__",
      "from_file",
      "reload"
    ],
    "flowproc.infrastructure.persistence.data_io": [
      "extract_tissue",
      "validate_parsed_data",
      "extract_group_animal"
    ],
    "flowproc.infrastructure.monitoring.metrics": [
      "get_metrics_history",
      "end_operation",
      "get_summary",
      "_monitor_loop",
      "start_monitoring",
      "__init__",
      "clear_metrics",
      "stop_monitoring",
      "start_operation",
      "get_current_metrics",
      "get_metrics_summary",
      "get_metrics",
      "_collect_system_metrics"
    ],
    "flowproc.infrastructure.monitoring.health": [
      "_check_memory_usage",
      "get_health_history",
      "clear_history",
      "_check_disk_usage",
      "_monitor_loop",
      "start_monitoring",
      "__init__",
      "stop_monitoring",
      "_check_python_environment",
      "_check_required_packages",
      "check_system_health",
      "_check_to_dict",
      "_create_summary",
      "_check_disk_space",
      "_determine_overall_status",
      "get_current_health",
      "_check_cpu_usage"
    ],
    "flowproc.domain.visualization.data_aggregation": [
      "sample_data_if_large",
      "prepare_data_for_plotting",
      "aggregate_by_group_with_sem",
      "aggregate_multiple_metrics_by_group"
    ],
    "flowproc.domain.visualization.plot_creators": [
      "create_basic_plot",
      "create_time_course_single_plot",
      "create_single_metric_plot",
      "create_cell_type_comparison_plot"
    ],
    "flowproc.domain.visualization.simple_visualizer": [
      "_extract_cell_type_name",
      "time_plot",
      "_create_time_course_single_plot",
      "compare_groups",
      "histogram",
      "scatter",
      "_detect_flow_columns",
      "_analyze_data_size",
      "_create_single_column_faceted_plot",
      "bar",
      "_create_cell_type_faceted_plot",
      "_create_single_metric_plot",
      "_create_group_faceted_plot",
      "_create_cell_type_comparison_plot",
      "_apply_standard_legend_config",
      "time_plot_faceted",
      "plot",
      "box",
      "_create_enhanced_title"
    ],
    "flowproc.domain.visualization.column_utils": [
      "extract_cell_type_name",
      "detect_flow_columns",
      "analyze_data_size",
      "create_enhanced_title",
      "get_base_columns"
    ],
    "flowproc.domain.visualization.time_plots": [
      "time_plot",
      "time_plot_faceted"
    ],
    "flowproc.domain.visualization.plotly_renderer": [
      "render_box",
      "render_3d_scatter",
      "render_scatter",
      "render_heatmap",
      "apply_custom_layout",
      "export_to_html",
      "export_to_image",
      "__init__",
      "render_line",
      "export_to_html_optimized",
      "export_to_pdf",
      "render_violin",
      "get_figure_info",
      "render_subplots",
      "apply_custom_traces",
      "render_histogram",
      "render_bar"
    ],
    "flowproc.domain.visualization.legend_config": [
      "apply_default_layout",
      "apply_standard_legend_config",
      "create_subplot_legend_annotation"
    ],
    "flowproc.domain.visualization.faceted_plots": [
      "create_single_column_faceted_plot",
      "create_cell_type_faceted_plot",
      "create_group_faceted_plot"
    ],
    "flowproc.domain.visualization.simple_visualizer_refactored": [
      "compare_groups",
      "histogram",
      "scatter",
      "plot",
      "box",
      "bar"
    ],
    "flowproc.domain.processing.service": [
      "__init__",
      "process_data",
      "transform_data",
      "aggregate_data",
      "get_processing_stats",
      "validate_processing_config"
    ],
    "flowproc.domain.processing.data_processor": [
      "process_dataframe_chunks",
      "monitor",
      "__init__",
      "optimize_dataframe",
      "check_memory"
    ],
    "flowproc.domain.processing.transformers": [
      "_filter_data",
      "_log_transform",
      "get_transformation_info",
      "_select_columns",
      "__init__",
      "_scale_data",
      "_normalize_data",
      "inverse_transform",
      "transform"
    ],
    "flowproc.domain.processing.vectorized_aggregator": [
      "aggregate_all_metrics",
      "_prepare_data",
      "_auto_detect_config",
      "__del__",
      "cleanup",
      "__init__",
      "benchmark_aggregation",
      "optimize_dataframe",
      "_clean_subpopulation_name",
      "aggregate_metric"
    ],
    "flowproc.domain.processing.core": [
      "_apply_transformations",
      "_apply_visualization_filters",
      "_apply_visualization_transformations",
      "can_handle",
      "__post_init__",
      "process",
      "validate_config",
      "__init__",
      "process_data",
      "_apply_workflow_processing",
      "_apply_aggregations",
      "_get_strategy"
    ],
    "flowproc.domain.processing.aggregators": [
      "aggregate"
    ],
    "flowproc.domain.processing.transform": [
      "reshape_pair",
      "map_replicates",
      "get_replicate"
    ],
    "flowproc.domain.parsing.tissue_parser": [
      "add_mapping",
      "parse",
      "get_tissue_full_name",
      "_extract_code",
      "_match_patterns",
      "get_full_name",
      "__init__",
      "get_all_codes",
      "extract_tissue"
    ],
    "flowproc.domain.parsing.service": [
      "parse_file",
      "register_strategy",
      "validate_file",
      "__init__",
      "get_available_strategies"
    ],
    "flowproc.domain.parsing.strategies": [
      "parse",
      "__init__"
    ],
    "flowproc.domain.parsing.validators": [
      "validate_time_consistency",
      "_validate_missing_values",
      "validate_directory",
      "_validate_duplicates",
      "_validate_required_columns",
      "__init__",
      "validate",
      "_validate_data_types",
      "_generate_stats",
      "validate_sample_ids",
      "validate_csv_file"
    ],
    "flowproc.domain.parsing.column_detector": [
      "_score_id_column",
      "detect_metadata_columns",
      "detect_metric_columns",
      "__init__",
      "detect_sample_id_column"
    ],
    "flowproc.domain.parsing.csv_reader": [
      "read",
      "_clean_dataframe",
      "__init__"
    ],
    "flowproc.domain.parsing.group_animal_parser": [
      "format",
      "parse",
      "__init__",
      "extract_group_animal",
      "validate",
      "_extract_values"
    ],
    "flowproc.domain.parsing.well_parser": [
      "parse_row_col",
      "get_index",
      "parse",
      "__init__",
      "_is_valid_well",
      "from_index"
    ],
    "flowproc.domain.parsing.time_parser": [
      "parse_range",
      "parse",
      "parse_time",
      "__init__",
      "_convert_to_hours",
      "format_time"
    ],
    "flowproc.domain.parsing.validation_utils": [
      "validate_sample_id_for_negative_values",
      "validate_group_animal_values"
    ],
    "flowproc.domain.parsing.data_transformer": [
      "_parse_sample_ids",
      "_extract_time_from_filename",
      "_validate_transformed_data",
      "_add_parsed_columns",
      "__init__",
      "_cleanup_dataframe",
      "transform"
    ],
    "flowproc.domain.parsing.time_service": [
      "_format_decimal",
      "format",
      "parse_range",
      "parse_formatted_time",
      "_auto_format",
      "from_excel_serial",
      "parse_formatted",
      "parse",
      "validate_time",
      "parse_time",
      "_format_hm_verbose",
      "__init__",
      "to_excel_serial",
      "_convert_to_hours",
      "format_time",
      "_format_hm"
    ],
    "flowproc.domain.parsing.sample_id_parser": [
      "clear_cache",
      "_remove_well_pattern",
      "parse",
      "_remove_tissue_pattern",
      "_remove_group_animal_pattern",
      "__init__",
      "_parse_components",
      "_remove_time_pattern"
    ],
    "flowproc.domain.parsing.parsing_utils": [
      "is_likely_id_column",
      "validate_parsed_data",
      "load_and_parse_df"
    ],
    "flowproc.domain.parsing.validation_service.validators": [
      "validate_numeric_values",
      "validate_with_result",
      "add_error",
      "validate_persistence_input",
      "validate_parsed_data",
      "__bool__",
      "validate_required_columns",
      "add_warning",
      "validate_time_values",
      "validate_duplicate_samples",
      "validate_dataframe_structure",
      "validate_parsing_output"
    ],
    "flowproc.domain.export.service": [
      "export_data",
      "validate_export_config",
      "_export_single_csv",
      "_export_single_parquet",
      "__init__",
      "get_export_info",
      "_export_to_parquet",
      "_export_to_json",
      "_export_to_csv",
      "_export_to_excel",
      "get_export_formats"
    ],
    "flowproc.domain.export.formatters": [
      "_format_number",
      "_apply_custom_formats",
      "format_dataframe",
      "create_format_template",
      "_format_column",
      "_apply_global_formats",
      "get_available_formats",
      "_format_string",
      "_add_thousands_separator",
      "__init__",
      "_format_rows",
      "_format_columns",
      "_format_datetime",
      "_format_custom"
    ],
    "flowproc.domain.export.data_aggregator": [
      "pivot_for_excel",
      "aggregate_by_group",
      "aggregate_with_stats",
      "reshape_for_time_course",
      "__init__"
    ],
    "flowproc.domain.export.sheet_builder": [
      "create_id_sheet",
      "_write_data",
      "create_summary_sheet",
      "_write_headers",
      "__init__",
      "create_data_sheet",
      "_format_sheet",
      "_write_ids"
    ],
    "flowproc.domain.export.__init__": [
      "process_and_write_categories",
      "_create_sheet_pair",
      "_get_group_label_map",
      "process_csv",
      "_get_raw_cols",
      "process_directory",
      "_clean_column_name",
      "_process_metric",
      "_write_timecourse_data",
      "_create_empty_excel",
      "_autofit_columns",
      "_write_standard_data",
      "_format_time"
    ],
    "flowproc.domain.export.excel_writer": [
      "_apply_sheet_formatting",
      "_add_metadata_sheet",
      "_sanitize_sheet_name",
      "__init__",
      "_auto_adjust_columns",
      "_write_dataframe_to_sheet",
      "write_excel",
      "write_with_metadata"
    ],
    "flowproc.domain.export.excel_formatter": [
      "_reorder_sheets",
      "_format_worksheet",
      "__init__",
      "add_validation_sheet",
      "add_info_sheet",
      "format_workbook"
    ],
    "flowproc.domain.export.time_formatter": [
      "format",
      "from_excel_serial",
      "to_excel_serial",
      "__init__",
      "parse_excel_time"
    ],
    "flowproc.domain.export.replicate_mapper": [
      "validate_mapping",
      "map_replicates",
      "__init__",
      "get_replicate_summary",
      "_create_mapping"
    ],
    "flowproc.domain.export.style_manager": [
      "apply_subheader_style",
      "format_column_by_type",
      "apply_borders",
      "autofit_columns",
      "_create_named_styles",
      "__init__",
      "_init_styles",
      "apply_header_style",
      "freeze_panes",
      "apply_alternating_rows"
    ],
    "flowproc.domain.validation.input_validator": [
      "add_error",
      "validate_input_paths",
      "__bool__",
      "_validate_file",
      "add_warning",
      "__init__",
      "validate_processing_options",
      "validate_gui_inputs",
      "validate_output_directory",
      "_check_disk_space",
      "_validate_directory"
    ],
    "flowproc.presentation.cli.cli": [
      "main"
    ],
    "flowproc.presentation.gui.main": [
      "main"
    ],
    "flowproc.presentation.gui.config_handler": [
      "load_last_output_dir",
      "save_last_output_dir",
      "get_user_desktop"
    ],
    "flowproc.presentation.gui.workers.processing_worker": [
      "pause",
      "_check_pause",
      "__init__",
      "run",
      "is_processing",
      "set_task",
      "_process_single_path",
      "start_processing",
      "cleanup",
      "resume_processing",
      "get_state",
      "state",
      "cancel",
      "resume",
      "_check_cancellation",
      "pause_processing",
      "_set_state",
      "_on_state_changed",
      "cancel_processing",
      "_on_error"
    ],
    "flowproc.presentation.gui.workers.validation_worker": [
      "validate_inputs",
      "__post_init__",
      "cancel_validation",
      "_perform_validation",
      "__init__",
      "run"
    ],
    "flowproc.presentation.gui.controllers.processing_controller": [
      "parse_input_files",
      "get_processing_summary",
      "__init__",
      "process_data",
      "_get_data_columns",
      "_get_processing_metrics",
      "_get_data_shape",
      "clear_data",
      "export_results"
    ],
    "flowproc.presentation.gui.controllers.main_controller": [
      "pause_processing",
      "validate_inputs",
      "start_processing",
      "_connect_signals",
      "_on_status",
      "cleanup",
      "__init__",
      "resume_processing",
      "cancel_processing",
      "is_processing",
      "_on_completion",
      "_on_progress"
    ],
    "flowproc.presentation.gui.views.main_window": [
      "on_processing_completed",
      "closeEvent",
      "last_csv",
      "current_group_labels",
      "_connect_signals",
      "preview_paths",
      "on_processing_error",
      "on_validation_error",
      "_setup_window",
      "__init__",
      "on_progress_updated",
      "_setup_ui",
      "on_status_updated",
      "is_processing",
      "_center_window",
      "resizeEvent",
      "on_processing_started"
    ],
    "flowproc.presentation.gui.views.mixins.validation_mixin": [
      "validate_file_paths",
      "validate_inputs",
      "validate_output_directory",
      "__init__"
    ],
    "flowproc.presentation.gui.views.mixins.styling_mixin": [
      "setup_application_icon",
      "setup_styling",
      "setup_palette_and_style"
    ],
    "flowproc.presentation.gui.views.components.state_manager": [
      "restore_state",
      "remove_observer",
      "last_csv",
      "current_group_labels",
      "_notify_observers",
      "preview_paths",
      "__init__",
      "update_status",
      "get_state_snapshot",
      "clear_preview_data",
      "is_processing",
      "last_output_dir",
      "add_observer"
    ],
    "flowproc.presentation.gui.views.components.event_handler": [
      "update_preview_paths",
      "handle_processing_error",
      "handle_processing_completion",
      "handle_validation_error",
      "on_group_mode_changed",
      "save_definitions",
      "connect_all_signals",
      "__init__",
      "preview_csv",
      "clear_input",
      "process_data",
      "toggle_manual",
      "visualize_results",
      "_validate_inputs",
      "open_group_labels_dialog",
      "browse_input",
      "browse_output"
    ],
    "flowproc.presentation.gui.views.components.ui_builder": [
      "_build_process_controls",
      "get_widget",
      "update_progress",
      "toggle_manual_mode",
      "__init__",
      "_build_io_group",
      "update_status",
      "update_layout_for_size",
      "build_complete_ui",
      "_build_progress_section",
      "_build_options_group",
      "set_processing_state",
      "_setup_tooltips"
    ],
    "flowproc.presentation.gui.views.components.visualization_coordinator": [
      "start_visualization",
      "cleanup",
      "__init__",
      "_show_options_dialog",
      "_on_plot_generated",
      "update_visualization",
      "_on_options_configured",
      "_show_display_dialog"
    ],
    "flowproc.presentation.gui.views.components.processing_coordinator": [
      "pause_processing",
      "visualize_data_with_options",
      "_on_processing_completed",
      "start_processing",
      "connect_signals",
      "cleanup",
      "__init__",
      "resume_processing",
      "_on_processing_error",
      "cancel_processing",
      "is_processing",
      "handle_close_request",
      "get_state",
      "visualize_data"
    ],
    "flowproc.presentation.gui.views.components.file_manager": [
      "browse_input_files",
      "_create_preview_table",
      "__init__",
      "_get_unique_values",
      "show_preview_dialog",
      "_validate_and_expand_paths"
    ],
    "flowproc.presentation.gui.views.components.gui_validator": [
      "validate_inputs",
      "__init__"
    ],
    "flowproc.presentation.gui.views.dialogs.group_labels_dialog": [
      "_add_label",
      "_clear_all_labels",
      "get_labels",
      "_update_button_states",
      "_import_from_text",
      "__init__",
      "_setup_ui",
      "_setup_styling",
      "_export_to_text",
      "_edit_selected_item",
      "set_labels",
      "_populate_list",
      "_remove_selected_item",
      "_add_labels_from_paste"
    ],
    "flowproc.presentation.gui.views.dialogs.visualization_display_dialog": [
      "__init__",
      "_setup_configuration_section",
      "_setup_plot_section",
      "_save_visualization",
      "set_options",
      "_identify_summary_metrics",
      "_generate_plot",
      "_setup_buttons",
      "_identify_categorical_columns",
      "_setup_ui",
      "_setup_styling",
      "_on_time_course_toggled",
      "resizeEvent",
      "_on_custom_axes_toggled",
      "_analyze_data",
      "_populate_covariates_options",
      "closeEvent",
      "_populate_column_options",
      "_get_current_options",
      "_update_plot",
      "_show_error_message",
      "_apply_options",
      "_open_in_browser",
      "_on_plot_mode_changed",
      "_is_time_column",
      "_configure_combo_box_view",
      "_generate_placeholder_plot",
      "_on_option_changed"
    ],
    "flowproc.presentation.gui.views.dialogs.preview_dialog": [
      "_on_options_changed",
      "_populate_table",
      "_clear_preview",
      "get_selected_file",
      "_on_file_selected",
      "_refresh_preview",
      "set_csv_files",
      "_on_load_error",
      "__init__",
      "_select_current_file",
      "_setup_ui",
      "_setup_styling",
      "_on_data_loaded",
      "_load_preview",
      "run",
      "_update_statistics",
      "_populate_file_selector"
    ],
    "flowproc.presentation.gui.views.dialogs.visualization_options_dialog": [
      "get_visualization_options",
      "__init__",
      "_identify_summary_metrics",
      "_setup_data_info",
      "_get_visualization_options",
      "_identify_categorical_columns",
      "_analyze_data_simple",
      "_setup_ui",
      "_setup_styling",
      "_on_custom_axes_toggled",
      "_apply_current_options",
      "_populate_covariates_options",
      "_populate_column_options",
      "_setup_advanced_options",
      "_setup_covariates_section",
      "_setup_basic_options",
      "_update_data_info",
      "_configure_and_generate",
      "_setup_buttons"
    ],
    "flowproc.presentation.gui.views.widgets.progress_widget": [
      "_update_time_display",
      "update_progress",
      "is_progress_active",
      "__init__",
      "_setup_ui",
      "_setup_styling",
      "reset_progress",
      "set_cancel_enabled",
      "complete_progress",
      "start_progress",
      "_format_time"
    ],
    "flowproc.presentation.gui.views.widgets.drop_line_edit": [
      "dragEnterEvent",
      "dropEvent",
      "__init__"
    ]
  },
  "class_definitions": {
    "flowproc.config": [
      "Config"
    ],
    "flowproc.core.models": [
      "ExportOptions",
      "ProcessingResult",
      "DatasetInfo",
      "ProcessingOptions",
      "VisualizationOptions",
      "ProcessingConfig",
      "VisualizationConfig",
      "ValidationResult"
    ],
    "flowproc.core.protocols": [
      "ExporterProtocol",
      "ParserProtocol",
      "ProcessorProtocol",
      "DataParser",
      "ConfigurationManager",
      "DataProviderProtocol",
      "DataProcessor",
      "VisualizerProtocol",
      "DataExporter",
      "ConfigProviderProtocol",
      "ServiceProtocol",
      "VisualizationRenderer",
      "ValidatorProtocol"
    ],
    "flowproc.core.constants": [
      "ProcessingMode",
      "ValidationLevel",
      "VisualizationType",
      "ExportFormat",
      "Constants",
      "AggregationMethod"
    ],
    "flowproc.core.exceptions": [
      "DataError",
      "FlowProcError",
      "ProcessingError",
      "ValidationError",
      "ExportError",
      "ConfigurationError",
      "FileError",
      "ParsingError",
      "VisualizationError"
    ],
    "flowproc.core.validation": [
      "ListValidator",
      "RangeValidator",
      "EnumValidator",
      "RequiredValidator",
      "ConfigurationValidator",
      "ValidationSeverity",
      "PathValidator",
      "TypeValidator",
      "ValidationResult",
      "ValidationIssue",
      "BaseValidator"
    ],
    "flowproc.application.container": [
      "Container"
    ],
    "flowproc.application.exceptions": [
      "FlowProcError",
      "ProcessingError",
      "DataParsingError",
      "DataValidationError",
      "ExportError",
      "ConfigurationError",
      "VisualizationError"
    ],
    "flowproc.application.workflows.visualization": [
      "VisualizationWorkflow"
    ],
    "flowproc.application.workflows.data_processing": [
      "DataProcessingWorkflow"
    ],
    "flowproc.application.handlers.event_handler": [
      "EventHandler",
      "EventType",
      "EventNotifier",
      "EventLogger",
      "Event"
    ],
    "flowproc.application.handlers.error_handler": [
      "ErrorHandler",
      "ErrorRecovery"
    ],
    "flowproc.infrastructure.config.settings": [
      "VisualizationSettings",
      "ApplicationSettings",
      "ProcessingSettings",
      "FileConfigManager",
      "Settings",
      "ExportSettings"
    ],
    "flowproc.infrastructure.monitoring.metrics": [
      "MetricsCollector",
      "SystemMonitor",
      "PerformanceMetrics"
    ],
    "flowproc.infrastructure.monitoring.health": [
      "HealthCheck",
      "HealthMonitor",
      "HealthChecker"
    ],
    "flowproc.domain.visualization.plotly_renderer": [
      "PlotlyRenderer"
    ],
    "flowproc.domain.processing.service": [
      "DataProcessingService"
    ],
    "flowproc.domain.processing.data_processor": [
      "ChunkedDataProcessor",
      "MemoryMonitor"
    ],
    "flowproc.domain.processing.transformers": [
      "DataTransformer"
    ],
    "flowproc.domain.processing.vectorized_aggregator": [
      "AggregationConfig",
      "AggregationResult",
      "VectorizedAggregator"
    ],
    "flowproc.domain.processing.core": [
      "ProcessingMode",
      "WorkflowProcessingStrategy",
      "UnifiedProcessingService",
      "DataProcessor",
      "GenericProcessingStrategy",
      "ProcessingStrategy",
      "ProcessingConfig",
      "VisualizationProcessingStrategy"
    ],
    "flowproc.domain.processing.aggregators": [
      "DataAggregator",
      "AggregationStats"
    ],
    "flowproc.domain.parsing.tissue_parser": [
      "TissueParser"
    ],
    "flowproc.domain.parsing.service": [
      "ParseService"
    ],
    "flowproc.domain.parsing.strategies": [
      "CustomParsingStrategy",
      "DefaultParsingStrategy",
      "MinimalParsingStrategy",
      "ParsingStrategy"
    ],
    "flowproc.domain.parsing.validators": [
      "DataValidator"
    ],
    "flowproc.domain.parsing.column_detector": [
      "ColumnDetector"
    ],
    "flowproc.domain.parsing.csv_reader": [
      "CSVReader"
    ],
    "flowproc.domain.parsing.group_animal_parser": [
      "GroupAnimalParser",
      "GroupAnimal"
    ],
    "flowproc.domain.parsing.well_parser": [
      "WellParser"
    ],
    "flowproc.domain.parsing.time_parser": [
      "TimeParser"
    ],
    "flowproc.domain.parsing.data_transformer": [
      "DataTransformer"
    ],
    "flowproc.domain.parsing.time_service": [
      "TimeFormat",
      "TimeService"
    ],
    "flowproc.domain.parsing.sample_id_parser": [
      "ParsedSampleID",
      "SampleIDParser"
    ],
    "flowproc.domain.parsing.parsing_utils": [
      "ParsedID"
    ],
    "flowproc.domain.parsing.validation_service.validators": [
      "ValidationConfig",
      "ValidationResult"
    ],
    "flowproc.domain.export.service": [
      "ExportService"
    ],
    "flowproc.domain.export.formatters": [
      "DataFormatter"
    ],
    "flowproc.domain.export.data_aggregator": [
      "DataAggregator"
    ],
    "flowproc.domain.export.sheet_builder": [
      "SheetBuilder"
    ],
    "flowproc.domain.export.excel_writer": [
      "ExcelWriter"
    ],
    "flowproc.domain.export.excel_formatter": [
      "ExcelFormatter"
    ],
    "flowproc.domain.export.time_formatter": [
      "TimeFormatter"
    ],
    "flowproc.domain.export.replicate_mapper": [
      "ReplicateMapper"
    ],
    "flowproc.domain.export.style_manager": [
      "StyleManager"
    ],
    "flowproc.domain.validation.input_validator": [
      "InputValidationResult",
      "InputValidator",
      "InputValidationConfig"
    ],
    "flowproc.presentation.gui.workers.processing_worker": [
      "ProcessingTask",
      "ProcessingManager",
      "ProcessingState",
      "ProcessingResult",
      "ProcessingWorker"
    ],
    "flowproc.presentation.gui.workers.validation_worker": [
      "ValidationWorker",
      "ValidationResult"
    ],
    "flowproc.presentation.gui.controllers.processing_controller": [
      "ProcessingController"
    ],
    "flowproc.presentation.gui.controllers.main_controller": [
      "MainController"
    ],
    "flowproc.presentation.gui.views.main_window": [
      "MainWindow"
    ],
    "flowproc.presentation.gui.views.mixins.validation_mixin": [
      "ValidationMixin"
    ],
    "flowproc.presentation.gui.views.mixins.styling_mixin": [
      "StylingMixin"
    ],
    "flowproc.presentation.gui.views.components.state_manager": [
      "StateManager",
      "WindowState"
    ],
    "flowproc.presentation.gui.views.components.event_handler": [
      "EventHandler"
    ],
    "flowproc.presentation.gui.views.components.ui_builder": [
      "UIBuilder"
    ],
    "flowproc.presentation.gui.views.components.visualization_coordinator": [
      "VisualizationCoordinator"
    ],
    "flowproc.presentation.gui.views.components.processing_coordinator": [
      "ProcessingCoordinator"
    ],
    "flowproc.presentation.gui.views.components.file_manager": [
      "FileManager"
    ],
    "flowproc.presentation.gui.views.components.gui_validator": [
      "GUIValidator"
    ],
    "flowproc.presentation.gui.views.dialogs.group_labels_dialog": [
      "GroupLabelsDialog"
    ],
    "flowproc.presentation.gui.views.dialogs.visualization_display_dialog": [
      "VisualizationDisplayDialog"
    ],
    "flowproc.presentation.gui.views.dialogs.preview_dialog": [
      "PreviewDialog",
      "CSVPreviewWorker"
    ],
    "flowproc.presentation.gui.views.dialogs.visualization_options_dialog": [
      "VisualizationOptions",
      "VisualizationOptionsDialog"
    ],
    "flowproc.presentation.gui.views.widgets.progress_widget": [
      "ProgressWidget"
    ],
    "flowproc.presentation.gui.views.widgets.drop_line_edit": [
      "DropLineEdit"
    ]
  },
  "layer_analysis": {},
  "cross_layer_dependencies": {
    "presentation_to_domain": [
      [
        "flowproc.presentation.gui.workers.validation_worker",
        "flowproc.domain.validation"
      ],
      [
        "flowproc.presentation.gui.controllers.main_controller",
        "flowproc.domain.validation"
      ],
      [
        "flowproc.presentation.gui.views.mixins.validation_mixin",
        "flowproc.domain.validation"
      ],
      [
        "flowproc.presentation.gui.views.components.event_handler",
        "flowproc.domain.parsing.service"
      ],
      [
        "flowproc.presentation.gui.views.components.processing_coordinator",
        "flowproc.domain.visualization.simple_visualizer"
      ],
      [
        "flowproc.presentation.gui.views.components.gui_validator",
        "flowproc.domain.validation"
      ],
      [
        "flowproc.presentation.gui.views.dialogs.visualization_display_dialog",
        "flowproc.domain.visualization.simple_visualizer"
      ],
      [
        "flowproc.presentation.gui.views.dialogs.visualization_display_dialog",
        "flowproc.domain.parsing"
      ],
      [
        "flowproc.presentation.gui.views.dialogs.visualization_options_dialog",
        "flowproc.domain.parsing"
      ]
    ],
    "presentation_to_core": [
      [
        "flowproc.presentation.gui.views.components.event_handler",
        "flowproc.core.constants"
      ],
      [
        "flowproc.presentation.gui.views.dialogs.visualization_display_dialog",
        "flowproc.core.constants"
      ],
      [
        "flowproc.presentation.gui.views.dialogs.visualization_options_dialog",
        "flowproc.core.constants"
      ]
    ],
    "presentation_to_shared": [
      [
        "flowproc.presentation.gui.main",
        "flowproc.logging_config"
      ],
      [
        "flowproc.presentation.gui.main",
        "flowproc.resource_utils"
      ],
      [
        "flowproc.presentation.gui.views.mixins.styling_mixin",
        "flowproc.resource_utils"
      ],
      [
        "flowproc.presentation.gui.views.components.event_handler",
        "flowproc.config"
      ]
    ],
    "application_to_domain": [
      [
        "flowproc.application.container",
        "flowproc.domain.processing.service"
      ],
      [
        "flowproc.application.container",
        "flowproc.domain.visualization.plotly_renderer"
      ],
      [
        "flowproc.application.container",
        "flowproc.domain.export.service"
      ],
      [
        "flowproc.application.container",
        "flowproc.domain.parsing.service"
      ]
    ],
    "application_to_infrastructure": [
      [
        "flowproc.application.container",
        "flowproc.infrastructure.config.settings"
      ]
    ],
    "application_to_core": [
      [
        "flowproc.application.container",
        "flowproc.core.protocols"
      ]
    ]
  },
  "statistics": {
    "modules_per_layer": {
      "presentation": 33,
      "application": 9,
      "domain": 50,
      "infrastructure": 8,
      "core": 6,
      "shared": 6
    },
    "total_dependencies": 28,
    "avg_dependencies_per_module": 0.25,
    "most_dependent_modules": [
      [
        "flowproc.application.container",
        6
      ],
      [
        "flowproc.presentation.gui.views.dialogs.visualization_display_dialog",
        4
      ],
      [
        "flowproc.presentation.gui.main",
        3
      ],
      [
        "flowproc.presentation.gui.views.components.event_handler",
        3
      ],
      [
        "flowproc.presentation.gui.views.dialogs.visualization_options_dialog",
        2
      ],
      [
        "flowproc.domain.visualization.simple_visualizer",
        1
      ],
      [
        "flowproc.domain.visualization.time_plots",
        1
      ],
      [
        "flowproc.domain.visualization.simple_visualizer_refactored",
        1
      ],
      [
        "flowproc.domain.processing.transform",
        1
      ],
      [
        "flowproc.presentation.gui.workers.validation_worker",
        1
      ]
    ]
  }
}